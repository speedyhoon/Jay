// Code generated by Jay; DO NOT EDIT. Tool documentation available at: https://github.com/speedyhoon/jay

package main

import "github.com/speedyhoon/jay"

func (o *One) MarshalJ() []byte {
	return []byte{jay.Bool4(o.One[0], o.One[1], o.One[2], o.One[3])}
}

func (o *One) UnmarshalJ(b []byte) error {
	if len(b) != 1 {
		return jay.ErrUnexpectedEOB
	}
	o.One[0], o.One[1], o.One[2], o.One[3] = jay.ReadBool4(b[0])
	return nil
}

func (t *Two) MarshalJ() []byte {
	return []byte{jay.Bool8(t.One[0], t.One[1], t.Two[0], t.Two[1], t.Two[2], t.Two[3], t.Two[4], t.Two[5]), jay.Bool1(t.Two[6])}
}

func (t *Two) UnmarshalJ(b []byte) error {
	if len(b) != 2 {
		return jay.ErrUnexpectedEOB
	}
	t.One[0], t.One[1], t.Two[0], t.Two[1], t.Two[2], t.Two[3], t.Two[4], t.Two[5] = jay.ReadBool8(b[0])
	t.Two[6] = jay.ReadBool1(b[1])
	return nil
}

func (t *Three) MarshalJ() []byte {
	return []byte{jay.Bool8(t.One[0], t.One[1], t.One[2], t.One[3], t.One[4], t.One[5], t.One[6], t.One[7]), jay.Bool8(t.Two[0], t.Three[0], t.Three[1], t.Three[2], t.Three[3], t.Three[4], t.Three[5], t.Three[6]), jay.Bool2(t.Three[7], t.Three[8])}
}

func (t *Three) UnmarshalJ(b []byte) error {
	if len(b) != 3 {
		return jay.ErrUnexpectedEOB
	}
	t.One[0], t.One[1], t.One[2], t.One[3], t.One[4], t.One[5], t.One[6], t.One[7] = jay.ReadBool8(b[0])
	t.Two[0], t.Three[0], t.Three[1], t.Three[2], t.Three[3], t.Three[4], t.Three[5], t.Three[6] = jay.ReadBool8(b[1])
	t.Three[7], t.Three[8] = jay.ReadBool2(b[2])
	return nil
}

func (f *Four) MarshalJ() []byte {
	return []byte{jay.Bool8(f.One[0], f.One[1], f.One[2], f.One[3], f.One[4], f.One[5], f.One[6], f.Two[0]), jay.Bool8(f.Two[1], f.Three[0], f.Three[1], f.Three[2], f.Three[3], f.Three[4], f.Three[5], f.Four[0]), jay.Bool7(f.Four[1], f.Four[2], f.Four[3], f.Four[4], f.Four[5], f.Four[6], f.Four[7])}
}

func (f *Four) UnmarshalJ(b []byte) error {
	if len(b) != 3 {
		return jay.ErrUnexpectedEOB
	}
	f.One[0], f.One[1], f.One[2], f.One[3], f.One[4], f.One[5], f.One[6], f.Two[0] = jay.ReadBool8(b[0])
	f.Two[1], f.Three[0], f.Three[1], f.Three[2], f.Three[3], f.Three[4], f.Three[5], f.Four[0] = jay.ReadBool8(b[1])
	f.Four[1], f.Four[2], f.Four[3], f.Four[4], f.Four[5], f.Four[6], f.Four[7] = jay.ReadBool7(b[2])
	return nil
}

func (f *Five) MarshalJ() []byte {
	return []byte{jay.Bool8(f.One[0], f.One[1], f.Two[0], f.Two[1], f.Two[2], f.Three[0], f.Three[1], f.Three[2]), jay.Bool8(f.Three[3], f.Four[0], f.Four[1], f.Four[2], f.Four[3], f.Four[4], f.Four[5], f.Four[6]), jay.Bool2(f.Four[7], f.Five[0])}
}

func (f *Five) UnmarshalJ(b []byte) error {
	if len(b) != 3 {
		return jay.ErrUnexpectedEOB
	}
	f.One[0], f.One[1], f.Two[0], f.Two[1], f.Two[2], f.Three[0], f.Three[1], f.Three[2] = jay.ReadBool8(b[0])
	f.Three[3], f.Four[0], f.Four[1], f.Four[2], f.Four[3], f.Four[4], f.Four[5], f.Four[6] = jay.ReadBool8(b[1])
	f.Four[7], f.Five[0] = jay.ReadBool2(b[2])
	return nil
}

func (s *Six) MarshalJ() []byte {
	return []byte{jay.Bool8(s.One[0], s.One[1], s.One[2], s.One[3], s.One[4], s.One[5], s.One[6], s.One[7]), jay.Bool8(s.One[8], s.Two[0], s.Two[1], s.Two[2], s.Two[3], s.Two[4], s.Three[0], s.Three[1]), jay.Bool8(s.Three[2], s.Three[3], s.Three[4], s.Three[5], s.Three[6], s.Four[0], s.Four[1], s.Five[0]), jay.Bool8(s.Five[1], s.Five[2], s.Five[3], s.Five[4], s.Five[5], s.Six[0], s.Six[1], s.Six[2]), jay.Bool7(s.Six[3], s.Six[4], s.Six[5], s.Six[6], s.Six[7], s.Six[8], s.Six[9])}
}

func (s *Six) UnmarshalJ(b []byte) error {
	if len(b) != 5 {
		return jay.ErrUnexpectedEOB
	}
	s.One[0], s.One[1], s.One[2], s.One[3], s.One[4], s.One[5], s.One[6], s.One[7] = jay.ReadBool8(b[0])
	s.One[8], s.Two[0], s.Two[1], s.Two[2], s.Two[3], s.Two[4], s.Three[0], s.Three[1] = jay.ReadBool8(b[1])
	s.Three[2], s.Three[3], s.Three[4], s.Three[5], s.Three[6], s.Four[0], s.Four[1], s.Five[0] = jay.ReadBool8(b[2])
	s.Five[1], s.Five[2], s.Five[3], s.Five[4], s.Five[5], s.Six[0], s.Six[1], s.Six[2] = jay.ReadBool8(b[3])
	s.Six[3], s.Six[4], s.Six[5], s.Six[6], s.Six[7], s.Six[8], s.Six[9] = jay.ReadBool7(b[4])
	return nil
}
