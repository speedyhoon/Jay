// Code generated by Jay; DO NOT EDIT. Tool documentation available at: https://github.com/speedyhoon/jay

package fuzz12

import "github.com/speedyhoon/jay"

func (t *Two) MarshalJ() (b []byte) {
	l0 := jay.SizeStringsArray(t.One[:], 6)
	b = make([]byte, l0+jay.SizeStringsArray(t.Two[:], 6))
	jay.WriteStringsArray(b[:l0], 6, t.One[:])
	jay.WriteStringsArray(b[l0:], 6, t.Two[:])
	return
}

func (t *Two) UnmarshalJ(b []byte) error {
	if len(b) < 12 {
		return jay.ErrUnexpectedEOB
	}
	var at uint
	if !jay.ReadStringsArrayAtOk(b[0:], t.One[:], 6, &at) {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringsArrayErr(b[at:], t.Two[:], 6)
}

func (t *Three) MarshalJ() (b []byte) {
	l0, l1 := jay.SizeStringsArray(t.One[:], 6), jay.SizeStringsArray(t.Two[:], 6)
	b = make([]byte, l0+l1+jay.SizeStringsArray(t.Three[:], 6))
	jay.WriteStringsArray(b[:l0], 6, t.One[:])
	at, end := l0, l0+l1
	jay.WriteStringsArray(b[at:end], 6, t.Two[:])
	jay.WriteStringsArray(b[end:], 6, t.Three[:])
	return
}

func (t *Three) UnmarshalJ(b []byte) error {
	if len(b) < 18 {
		return jay.ErrUnexpectedEOB
	}
	var at uint
	if !jay.ReadStringsArrayAtOk(b[0:], t.One[:], 6, &at) {
		return jay.ErrUnexpectedEOB
	}
	if !jay.ReadStringsArrayAtOk(b[at:], t.Two[:], 6, &at) {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringsArrayErr(b[at:], t.Three[:], 6)
}
