// Code generated by Jay; DO NOT EDIT. Tool documentation available at: https://github.com/speedyhoon/jay

package fuzz11

import "github.com/speedyhoon/jay"

func (f *Fuzz35690) MarshalJ() (b []byte) {
	l0, l1, l2 := jay.SizeStrings8(f.Three), len(f.One), len(f.Two)
	b = make([]byte, 3+8*l1+l0+l2)
	b[1], b[2] = byte(l1), byte(l2)
	at, end := 3, 3+l0
	jay.WriteStrings8(b[at:end], b[0:1], f.Three)
	at, end = end, end+l1*8
	jay.WriteComplex64s(b[at:end], f.One)
	copy(b[end:], f.Two)
	return
}

func (f *Fuzz35690) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 3 {
		return jay.ErrUnexpectedEOB
	}
	l1, l2 := int(b[1]), int(b[2])
	if l < 3+8*l1+l2 {
		return jay.ErrUnexpectedEOB
	}
	at, ok := jay.ReadStrings8nbXt(b[3:], &f.Three, b[0], 3)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	end := at + l1*8
	f.One = jay.ReadComplex64s(b[at:end], l1)
	f.Two = string(b[end:])
	return nil
}
