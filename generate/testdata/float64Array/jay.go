// Code generated by Jay; DO NOT EDIT. Tool documentation available at: https://github.com/speedyhoon/jay

package main

import "github.com/speedyhoon/jay"

func (o *One) MarshalJ() (b []byte) {
	b = make([]byte, 48)
	jay.WriteFloat64s(b, o.One[:], 6)
	return
}

func (o *One) UnmarshalJ(b []byte) error {
	if len(b) != 48 {
		return jay.ErrUnexpectedEOB
	}
	o.One = [6]float64(jay.ReadFloat64s(b, 6))
	return nil
}

func (t *Two) MarshalJ() (b []byte) {
	b = make([]byte, 96)
	jay.WriteFloat64s(b[:48], t.One[:], 6)
	jay.WriteFloat64s(b[48:], t.Two[:], 6)
	return
}

func (t *Two) UnmarshalJ(b []byte) error {
	if len(b) != 96 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	t.Two = [6]float64(jay.ReadFloat64s(b[48:], 6))
	return nil
}

func (t *Three) MarshalJ() (b []byte) {
	b = make([]byte, 144)
	jay.WriteFloat64s(b[:48], t.One[:], 6)
	jay.WriteFloat64s(b[48:96], t.Two[:], 6)
	jay.WriteFloat64s(b[96:], t.Three[:], 6)
	return
}

func (t *Three) UnmarshalJ(b []byte) error {
	if len(b) != 144 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	t.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	t.Three = [6]float64(jay.ReadFloat64s(b[96:], 6))
	return nil
}

func (f *Four) MarshalJ() (b []byte) {
	b = make([]byte, 192)
	jay.WriteFloat64s(b[:48], f.One[:], 6)
	jay.WriteFloat64s(b[48:96], f.Two[:], 6)
	jay.WriteFloat64s(b[96:144], f.Three[:], 6)
	jay.WriteFloat64s(b[144:], f.Four[:], 6)
	return
}

func (f *Four) UnmarshalJ(b []byte) error {
	if len(b) != 192 {
		return jay.ErrUnexpectedEOB
	}
	f.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	f.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	f.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	f.Four = [6]float64(jay.ReadFloat64s(b[144:], 6))
	return nil
}

func (f *Five) MarshalJ() (b []byte) {
	b = make([]byte, 240)
	jay.WriteFloat64s(b[:48], f.One[:], 6)
	jay.WriteFloat64s(b[48:96], f.Two[:], 6)
	jay.WriteFloat64s(b[96:144], f.Three[:], 6)
	jay.WriteFloat64s(b[144:192], f.Four[:], 6)
	jay.WriteFloat64s(b[192:], f.Five[:], 6)
	return
}

func (f *Five) UnmarshalJ(b []byte) error {
	if len(b) != 240 {
		return jay.ErrUnexpectedEOB
	}
	f.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	f.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	f.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	f.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	f.Five = [6]float64(jay.ReadFloat64s(b[192:], 6))
	return nil
}

func (s *Six) MarshalJ() (b []byte) {
	b = make([]byte, 288)
	jay.WriteFloat64s(b[:48], s.One[:], 6)
	jay.WriteFloat64s(b[48:96], s.Two[:], 6)
	jay.WriteFloat64s(b[96:144], s.Three[:], 6)
	jay.WriteFloat64s(b[144:192], s.Four[:], 6)
	jay.WriteFloat64s(b[192:240], s.Five[:], 6)
	jay.WriteFloat64s(b[240:], s.Six[:], 6)
	return
}

func (s *Six) UnmarshalJ(b []byte) error {
	if len(b) != 288 {
		return jay.ErrUnexpectedEOB
	}
	s.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	s.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	s.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	s.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	s.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	s.Six = [6]float64(jay.ReadFloat64s(b[240:], 6))
	return nil
}

func (s *Seven) MarshalJ() (b []byte) {
	b = make([]byte, 336)
	jay.WriteFloat64s(b[:48], s.One[:], 6)
	jay.WriteFloat64s(b[48:96], s.Two[:], 6)
	jay.WriteFloat64s(b[96:144], s.Three[:], 6)
	jay.WriteFloat64s(b[144:192], s.Four[:], 6)
	jay.WriteFloat64s(b[192:240], s.Five[:], 6)
	jay.WriteFloat64s(b[240:288], s.Six[:], 6)
	jay.WriteFloat64s(b[288:], s.Seven[:], 6)
	return
}

func (s *Seven) UnmarshalJ(b []byte) error {
	if len(b) != 336 {
		return jay.ErrUnexpectedEOB
	}
	s.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	s.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	s.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	s.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	s.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	s.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	s.Seven = [6]float64(jay.ReadFloat64s(b[288:], 6))
	return nil
}

func (e *Eight) MarshalJ() (b []byte) {
	b = make([]byte, 384)
	jay.WriteFloat64s(b[:48], e.One[:], 6)
	jay.WriteFloat64s(b[48:96], e.Two[:], 6)
	jay.WriteFloat64s(b[96:144], e.Three[:], 6)
	jay.WriteFloat64s(b[144:192], e.Four[:], 6)
	jay.WriteFloat64s(b[192:240], e.Five[:], 6)
	jay.WriteFloat64s(b[240:288], e.Six[:], 6)
	jay.WriteFloat64s(b[288:336], e.Seven[:], 6)
	jay.WriteFloat64s(b[336:], e.Eight[:], 6)
	return
}

func (e *Eight) UnmarshalJ(b []byte) error {
	if len(b) != 384 {
		return jay.ErrUnexpectedEOB
	}
	e.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	e.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	e.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	e.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	e.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	e.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	e.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	e.Eight = [6]float64(jay.ReadFloat64s(b[336:], 6))
	return nil
}

func (n *Nine) MarshalJ() (b []byte) {
	b = make([]byte, 432)
	jay.WriteFloat64s(b[:48], n.One[:], 6)
	jay.WriteFloat64s(b[48:96], n.Two[:], 6)
	jay.WriteFloat64s(b[96:144], n.Three[:], 6)
	jay.WriteFloat64s(b[144:192], n.Four[:], 6)
	jay.WriteFloat64s(b[192:240], n.Five[:], 6)
	jay.WriteFloat64s(b[240:288], n.Six[:], 6)
	jay.WriteFloat64s(b[288:336], n.Seven[:], 6)
	jay.WriteFloat64s(b[336:384], n.Eight[:], 6)
	jay.WriteFloat64s(b[384:], n.Nine[:], 6)
	return
}

func (n *Nine) UnmarshalJ(b []byte) error {
	if len(b) != 432 {
		return jay.ErrUnexpectedEOB
	}
	n.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	n.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	n.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	n.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	n.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	n.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	n.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	n.Eight = [6]float64(jay.ReadFloat64s(b[336:384], 6))
	n.Nine = [6]float64(jay.ReadFloat64s(b[384:], 6))
	return nil
}

func (t *Ten) MarshalJ() (b []byte) {
	b = make([]byte, 480)
	jay.WriteFloat64s(b[:48], t.One[:], 6)
	jay.WriteFloat64s(b[48:96], t.Two[:], 6)
	jay.WriteFloat64s(b[96:144], t.Three[:], 6)
	jay.WriteFloat64s(b[144:192], t.Four[:], 6)
	jay.WriteFloat64s(b[192:240], t.Five[:], 6)
	jay.WriteFloat64s(b[240:288], t.Six[:], 6)
	jay.WriteFloat64s(b[288:336], t.Seven[:], 6)
	jay.WriteFloat64s(b[336:384], t.Eight[:], 6)
	jay.WriteFloat64s(b[384:432], t.Nine[:], 6)
	jay.WriteFloat64s(b[432:], t.Ten[:], 6)
	return
}

func (t *Ten) UnmarshalJ(b []byte) error {
	if len(b) != 480 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	t.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	t.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	t.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	t.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	t.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	t.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	t.Eight = [6]float64(jay.ReadFloat64s(b[336:384], 6))
	t.Nine = [6]float64(jay.ReadFloat64s(b[384:432], 6))
	t.Ten = [6]float64(jay.ReadFloat64s(b[432:], 6))
	return nil
}

func (e *Eleven) MarshalJ() (b []byte) {
	b = make([]byte, 528)
	jay.WriteFloat64s(b[:48], e.One[:], 6)
	jay.WriteFloat64s(b[48:96], e.Two[:], 6)
	jay.WriteFloat64s(b[96:144], e.Three[:], 6)
	jay.WriteFloat64s(b[144:192], e.Four[:], 6)
	jay.WriteFloat64s(b[192:240], e.Five[:], 6)
	jay.WriteFloat64s(b[240:288], e.Six[:], 6)
	jay.WriteFloat64s(b[288:336], e.Seven[:], 6)
	jay.WriteFloat64s(b[336:384], e.Eight[:], 6)
	jay.WriteFloat64s(b[384:432], e.Nine[:], 6)
	jay.WriteFloat64s(b[432:480], e.Ten[:], 6)
	jay.WriteFloat64s(b[480:], e.Eleven[:], 6)
	return
}

func (e *Eleven) UnmarshalJ(b []byte) error {
	if len(b) != 528 {
		return jay.ErrUnexpectedEOB
	}
	e.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	e.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	e.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	e.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	e.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	e.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	e.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	e.Eight = [6]float64(jay.ReadFloat64s(b[336:384], 6))
	e.Nine = [6]float64(jay.ReadFloat64s(b[384:432], 6))
	e.Ten = [6]float64(jay.ReadFloat64s(b[432:480], 6))
	e.Eleven = [6]float64(jay.ReadFloat64s(b[480:], 6))
	return nil
}

func (t *Twelve) MarshalJ() (b []byte) {
	b = make([]byte, 576)
	jay.WriteFloat64s(b[:48], t.One[:], 6)
	jay.WriteFloat64s(b[48:96], t.Two[:], 6)
	jay.WriteFloat64s(b[96:144], t.Three[:], 6)
	jay.WriteFloat64s(b[144:192], t.Four[:], 6)
	jay.WriteFloat64s(b[192:240], t.Five[:], 6)
	jay.WriteFloat64s(b[240:288], t.Six[:], 6)
	jay.WriteFloat64s(b[288:336], t.Seven[:], 6)
	jay.WriteFloat64s(b[336:384], t.Eight[:], 6)
	jay.WriteFloat64s(b[384:432], t.Nine[:], 6)
	jay.WriteFloat64s(b[432:480], t.Ten[:], 6)
	jay.WriteFloat64s(b[480:528], t.Eleven[:], 6)
	jay.WriteFloat64s(b[528:], t.Twelve[:], 6)
	return
}

func (t *Twelve) UnmarshalJ(b []byte) error {
	if len(b) != 576 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	t.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	t.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	t.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	t.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	t.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	t.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	t.Eight = [6]float64(jay.ReadFloat64s(b[336:384], 6))
	t.Nine = [6]float64(jay.ReadFloat64s(b[384:432], 6))
	t.Ten = [6]float64(jay.ReadFloat64s(b[432:480], 6))
	t.Eleven = [6]float64(jay.ReadFloat64s(b[480:528], 6))
	t.Twelve = [6]float64(jay.ReadFloat64s(b[528:], 6))
	return nil
}

func (t *Thirteen) MarshalJ() (b []byte) {
	b = make([]byte, 624)
	jay.WriteFloat64s(b[:48], t.One[:], 6)
	jay.WriteFloat64s(b[48:96], t.Two[:], 6)
	jay.WriteFloat64s(b[96:144], t.Three[:], 6)
	jay.WriteFloat64s(b[144:192], t.Four[:], 6)
	jay.WriteFloat64s(b[192:240], t.Five[:], 6)
	jay.WriteFloat64s(b[240:288], t.Six[:], 6)
	jay.WriteFloat64s(b[288:336], t.Seven[:], 6)
	jay.WriteFloat64s(b[336:384], t.Eight[:], 6)
	jay.WriteFloat64s(b[384:432], t.Nine[:], 6)
	jay.WriteFloat64s(b[432:480], t.Ten[:], 6)
	jay.WriteFloat64s(b[480:528], t.Eleven[:], 6)
	jay.WriteFloat64s(b[528:576], t.Twelve[:], 6)
	jay.WriteFloat64s(b[576:], t.Thirteen[:], 6)
	return
}

func (t *Thirteen) UnmarshalJ(b []byte) error {
	if len(b) != 624 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	t.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	t.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	t.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	t.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	t.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	t.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	t.Eight = [6]float64(jay.ReadFloat64s(b[336:384], 6))
	t.Nine = [6]float64(jay.ReadFloat64s(b[384:432], 6))
	t.Ten = [6]float64(jay.ReadFloat64s(b[432:480], 6))
	t.Eleven = [6]float64(jay.ReadFloat64s(b[480:528], 6))
	t.Twelve = [6]float64(jay.ReadFloat64s(b[528:576], 6))
	t.Thirteen = [6]float64(jay.ReadFloat64s(b[576:], 6))
	return nil
}

func (f *Fourteen) MarshalJ() (b []byte) {
	b = make([]byte, 672)
	jay.WriteFloat64s(b[:48], f.One[:], 6)
	jay.WriteFloat64s(b[48:96], f.Two[:], 6)
	jay.WriteFloat64s(b[96:144], f.Three[:], 6)
	jay.WriteFloat64s(b[144:192], f.Four[:], 6)
	jay.WriteFloat64s(b[192:240], f.Five[:], 6)
	jay.WriteFloat64s(b[240:288], f.Six[:], 6)
	jay.WriteFloat64s(b[288:336], f.Seven[:], 6)
	jay.WriteFloat64s(b[336:384], f.Eight[:], 6)
	jay.WriteFloat64s(b[384:432], f.Nine[:], 6)
	jay.WriteFloat64s(b[432:480], f.Ten[:], 6)
	jay.WriteFloat64s(b[480:528], f.Eleven[:], 6)
	jay.WriteFloat64s(b[528:576], f.Twelve[:], 6)
	jay.WriteFloat64s(b[576:624], f.Thirteen[:], 6)
	jay.WriteFloat64s(b[624:], f.Fourteen[:], 6)
	return
}

func (f *Fourteen) UnmarshalJ(b []byte) error {
	if len(b) != 672 {
		return jay.ErrUnexpectedEOB
	}
	f.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	f.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	f.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	f.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	f.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	f.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	f.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	f.Eight = [6]float64(jay.ReadFloat64s(b[336:384], 6))
	f.Nine = [6]float64(jay.ReadFloat64s(b[384:432], 6))
	f.Ten = [6]float64(jay.ReadFloat64s(b[432:480], 6))
	f.Eleven = [6]float64(jay.ReadFloat64s(b[480:528], 6))
	f.Twelve = [6]float64(jay.ReadFloat64s(b[528:576], 6))
	f.Thirteen = [6]float64(jay.ReadFloat64s(b[576:624], 6))
	f.Fourteen = [6]float64(jay.ReadFloat64s(b[624:], 6))
	return nil
}

func (f *Fifteen) MarshalJ() (b []byte) {
	b = make([]byte, 720)
	jay.WriteFloat64s(b[:48], f.One[:], 6)
	jay.WriteFloat64s(b[48:96], f.Two[:], 6)
	jay.WriteFloat64s(b[96:144], f.Three[:], 6)
	jay.WriteFloat64s(b[144:192], f.Four[:], 6)
	jay.WriteFloat64s(b[192:240], f.Five[:], 6)
	jay.WriteFloat64s(b[240:288], f.Six[:], 6)
	jay.WriteFloat64s(b[288:336], f.Seven[:], 6)
	jay.WriteFloat64s(b[336:384], f.Eight[:], 6)
	jay.WriteFloat64s(b[384:432], f.Nine[:], 6)
	jay.WriteFloat64s(b[432:480], f.Ten[:], 6)
	jay.WriteFloat64s(b[480:528], f.Eleven[:], 6)
	jay.WriteFloat64s(b[528:576], f.Twelve[:], 6)
	jay.WriteFloat64s(b[576:624], f.Thirteen[:], 6)
	jay.WriteFloat64s(b[624:672], f.Fourteen[:], 6)
	jay.WriteFloat64s(b[672:], f.Fifteen[:], 6)
	return
}

func (f *Fifteen) UnmarshalJ(b []byte) error {
	if len(b) != 720 {
		return jay.ErrUnexpectedEOB
	}
	f.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	f.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	f.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	f.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	f.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	f.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	f.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	f.Eight = [6]float64(jay.ReadFloat64s(b[336:384], 6))
	f.Nine = [6]float64(jay.ReadFloat64s(b[384:432], 6))
	f.Ten = [6]float64(jay.ReadFloat64s(b[432:480], 6))
	f.Eleven = [6]float64(jay.ReadFloat64s(b[480:528], 6))
	f.Twelve = [6]float64(jay.ReadFloat64s(b[528:576], 6))
	f.Thirteen = [6]float64(jay.ReadFloat64s(b[576:624], 6))
	f.Fourteen = [6]float64(jay.ReadFloat64s(b[624:672], 6))
	f.Fifteen = [6]float64(jay.ReadFloat64s(b[672:], 6))
	return nil
}

func (s *Sixteen) MarshalJ() (b []byte) {
	b = make([]byte, 768)
	jay.WriteFloat64s(b[:48], s.One[:], 6)
	jay.WriteFloat64s(b[48:96], s.Two[:], 6)
	jay.WriteFloat64s(b[96:144], s.Three[:], 6)
	jay.WriteFloat64s(b[144:192], s.Four[:], 6)
	jay.WriteFloat64s(b[192:240], s.Five[:], 6)
	jay.WriteFloat64s(b[240:288], s.Six[:], 6)
	jay.WriteFloat64s(b[288:336], s.Seven[:], 6)
	jay.WriteFloat64s(b[336:384], s.Eight[:], 6)
	jay.WriteFloat64s(b[384:432], s.Nine[:], 6)
	jay.WriteFloat64s(b[432:480], s.Ten[:], 6)
	jay.WriteFloat64s(b[480:528], s.Eleven[:], 6)
	jay.WriteFloat64s(b[528:576], s.Twelve[:], 6)
	jay.WriteFloat64s(b[576:624], s.Thirteen[:], 6)
	jay.WriteFloat64s(b[624:672], s.Fourteen[:], 6)
	jay.WriteFloat64s(b[672:720], s.Fifteen[:], 6)
	jay.WriteFloat64s(b[720:], s.Sixteen[:], 6)
	return
}

func (s *Sixteen) UnmarshalJ(b []byte) error {
	if len(b) != 768 {
		return jay.ErrUnexpectedEOB
	}
	s.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	s.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	s.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	s.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	s.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	s.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	s.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	s.Eight = [6]float64(jay.ReadFloat64s(b[336:384], 6))
	s.Nine = [6]float64(jay.ReadFloat64s(b[384:432], 6))
	s.Ten = [6]float64(jay.ReadFloat64s(b[432:480], 6))
	s.Eleven = [6]float64(jay.ReadFloat64s(b[480:528], 6))
	s.Twelve = [6]float64(jay.ReadFloat64s(b[528:576], 6))
	s.Thirteen = [6]float64(jay.ReadFloat64s(b[576:624], 6))
	s.Fourteen = [6]float64(jay.ReadFloat64s(b[624:672], 6))
	s.Fifteen = [6]float64(jay.ReadFloat64s(b[672:720], 6))
	s.Sixteen = [6]float64(jay.ReadFloat64s(b[720:], 6))
	return nil
}

func (s *Seventeen) MarshalJ() (b []byte) {
	b = make([]byte, 816)
	jay.WriteFloat64s(b[:48], s.One[:], 6)
	jay.WriteFloat64s(b[48:96], s.Two[:], 6)
	jay.WriteFloat64s(b[96:144], s.Three[:], 6)
	jay.WriteFloat64s(b[144:192], s.Four[:], 6)
	jay.WriteFloat64s(b[192:240], s.Five[:], 6)
	jay.WriteFloat64s(b[240:288], s.Six[:], 6)
	jay.WriteFloat64s(b[288:336], s.Seven[:], 6)
	jay.WriteFloat64s(b[336:384], s.Eight[:], 6)
	jay.WriteFloat64s(b[384:432], s.Nine[:], 6)
	jay.WriteFloat64s(b[432:480], s.Ten[:], 6)
	jay.WriteFloat64s(b[480:528], s.Eleven[:], 6)
	jay.WriteFloat64s(b[528:576], s.Twelve[:], 6)
	jay.WriteFloat64s(b[576:624], s.Thirteen[:], 6)
	jay.WriteFloat64s(b[624:672], s.Fourteen[:], 6)
	jay.WriteFloat64s(b[672:720], s.Fifteen[:], 6)
	jay.WriteFloat64s(b[720:768], s.Sixteen[:], 6)
	jay.WriteFloat64s(b[768:], s.Seventeen[:], 6)
	return
}

func (s *Seventeen) UnmarshalJ(b []byte) error {
	if len(b) != 816 {
		return jay.ErrUnexpectedEOB
	}
	s.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	s.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	s.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	s.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	s.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	s.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	s.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	s.Eight = [6]float64(jay.ReadFloat64s(b[336:384], 6))
	s.Nine = [6]float64(jay.ReadFloat64s(b[384:432], 6))
	s.Ten = [6]float64(jay.ReadFloat64s(b[432:480], 6))
	s.Eleven = [6]float64(jay.ReadFloat64s(b[480:528], 6))
	s.Twelve = [6]float64(jay.ReadFloat64s(b[528:576], 6))
	s.Thirteen = [6]float64(jay.ReadFloat64s(b[576:624], 6))
	s.Fourteen = [6]float64(jay.ReadFloat64s(b[624:672], 6))
	s.Fifteen = [6]float64(jay.ReadFloat64s(b[672:720], 6))
	s.Sixteen = [6]float64(jay.ReadFloat64s(b[720:768], 6))
	s.Seventeen = [6]float64(jay.ReadFloat64s(b[768:], 6))
	return nil
}

func (e *Eighteen) MarshalJ() (b []byte) {
	b = make([]byte, 864)
	jay.WriteFloat64s(b[:48], e.One[:], 6)
	jay.WriteFloat64s(b[48:96], e.Two[:], 6)
	jay.WriteFloat64s(b[96:144], e.Three[:], 6)
	jay.WriteFloat64s(b[144:192], e.Four[:], 6)
	jay.WriteFloat64s(b[192:240], e.Five[:], 6)
	jay.WriteFloat64s(b[240:288], e.Six[:], 6)
	jay.WriteFloat64s(b[288:336], e.Seven[:], 6)
	jay.WriteFloat64s(b[336:384], e.Eight[:], 6)
	jay.WriteFloat64s(b[384:432], e.Nine[:], 6)
	jay.WriteFloat64s(b[432:480], e.Ten[:], 6)
	jay.WriteFloat64s(b[480:528], e.Eleven[:], 6)
	jay.WriteFloat64s(b[528:576], e.Twelve[:], 6)
	jay.WriteFloat64s(b[576:624], e.Thirteen[:], 6)
	jay.WriteFloat64s(b[624:672], e.Fourteen[:], 6)
	jay.WriteFloat64s(b[672:720], e.Fifteen[:], 6)
	jay.WriteFloat64s(b[720:768], e.Sixteen[:], 6)
	jay.WriteFloat64s(b[768:816], e.Seventeen[:], 6)
	jay.WriteFloat64s(b[816:], e.Eighteen[:], 6)
	return
}

func (e *Eighteen) UnmarshalJ(b []byte) error {
	if len(b) != 864 {
		return jay.ErrUnexpectedEOB
	}
	e.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	e.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	e.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	e.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	e.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	e.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	e.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	e.Eight = [6]float64(jay.ReadFloat64s(b[336:384], 6))
	e.Nine = [6]float64(jay.ReadFloat64s(b[384:432], 6))
	e.Ten = [6]float64(jay.ReadFloat64s(b[432:480], 6))
	e.Eleven = [6]float64(jay.ReadFloat64s(b[480:528], 6))
	e.Twelve = [6]float64(jay.ReadFloat64s(b[528:576], 6))
	e.Thirteen = [6]float64(jay.ReadFloat64s(b[576:624], 6))
	e.Fourteen = [6]float64(jay.ReadFloat64s(b[624:672], 6))
	e.Fifteen = [6]float64(jay.ReadFloat64s(b[672:720], 6))
	e.Sixteen = [6]float64(jay.ReadFloat64s(b[720:768], 6))
	e.Seventeen = [6]float64(jay.ReadFloat64s(b[768:816], 6))
	e.Eighteen = [6]float64(jay.ReadFloat64s(b[816:], 6))
	return nil
}

func (n *Nineteen) MarshalJ() (b []byte) {
	b = make([]byte, 912)
	jay.WriteFloat64s(b[:48], n.One[:], 6)
	jay.WriteFloat64s(b[48:96], n.Two[:], 6)
	jay.WriteFloat64s(b[96:144], n.Three[:], 6)
	jay.WriteFloat64s(b[144:192], n.Four[:], 6)
	jay.WriteFloat64s(b[192:240], n.Five[:], 6)
	jay.WriteFloat64s(b[240:288], n.Six[:], 6)
	jay.WriteFloat64s(b[288:336], n.Seven[:], 6)
	jay.WriteFloat64s(b[336:384], n.Eight[:], 6)
	jay.WriteFloat64s(b[384:432], n.Nine[:], 6)
	jay.WriteFloat64s(b[432:480], n.Ten[:], 6)
	jay.WriteFloat64s(b[480:528], n.Eleven[:], 6)
	jay.WriteFloat64s(b[528:576], n.Twelve[:], 6)
	jay.WriteFloat64s(b[576:624], n.Thirteen[:], 6)
	jay.WriteFloat64s(b[624:672], n.Fourteen[:], 6)
	jay.WriteFloat64s(b[672:720], n.Fifteen[:], 6)
	jay.WriteFloat64s(b[720:768], n.Sixteen[:], 6)
	jay.WriteFloat64s(b[768:816], n.Seventeen[:], 6)
	jay.WriteFloat64s(b[816:864], n.Eighteen[:], 6)
	jay.WriteFloat64s(b[864:], n.Nineteen[:], 6)
	return
}

func (n *Nineteen) UnmarshalJ(b []byte) error {
	if len(b) != 912 {
		return jay.ErrUnexpectedEOB
	}
	n.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	n.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	n.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	n.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	n.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	n.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	n.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	n.Eight = [6]float64(jay.ReadFloat64s(b[336:384], 6))
	n.Nine = [6]float64(jay.ReadFloat64s(b[384:432], 6))
	n.Ten = [6]float64(jay.ReadFloat64s(b[432:480], 6))
	n.Eleven = [6]float64(jay.ReadFloat64s(b[480:528], 6))
	n.Twelve = [6]float64(jay.ReadFloat64s(b[528:576], 6))
	n.Thirteen = [6]float64(jay.ReadFloat64s(b[576:624], 6))
	n.Fourteen = [6]float64(jay.ReadFloat64s(b[624:672], 6))
	n.Fifteen = [6]float64(jay.ReadFloat64s(b[672:720], 6))
	n.Sixteen = [6]float64(jay.ReadFloat64s(b[720:768], 6))
	n.Seventeen = [6]float64(jay.ReadFloat64s(b[768:816], 6))
	n.Eighteen = [6]float64(jay.ReadFloat64s(b[816:864], 6))
	n.Nineteen = [6]float64(jay.ReadFloat64s(b[864:], 6))
	return nil
}

func (t *Twenty) MarshalJ() (b []byte) {
	b = make([]byte, 960)
	jay.WriteFloat64s(b[:48], t.One[:], 6)
	jay.WriteFloat64s(b[48:96], t.Two[:], 6)
	jay.WriteFloat64s(b[96:144], t.Three[:], 6)
	jay.WriteFloat64s(b[144:192], t.Four[:], 6)
	jay.WriteFloat64s(b[192:240], t.Five[:], 6)
	jay.WriteFloat64s(b[240:288], t.Six[:], 6)
	jay.WriteFloat64s(b[288:336], t.Seven[:], 6)
	jay.WriteFloat64s(b[336:384], t.Eight[:], 6)
	jay.WriteFloat64s(b[384:432], t.Nine[:], 6)
	jay.WriteFloat64s(b[432:480], t.Ten[:], 6)
	jay.WriteFloat64s(b[480:528], t.Eleven[:], 6)
	jay.WriteFloat64s(b[528:576], t.Twelve[:], 6)
	jay.WriteFloat64s(b[576:624], t.Thirteen[:], 6)
	jay.WriteFloat64s(b[624:672], t.Fourteen[:], 6)
	jay.WriteFloat64s(b[672:720], t.Fifteen[:], 6)
	jay.WriteFloat64s(b[720:768], t.Sixteen[:], 6)
	jay.WriteFloat64s(b[768:816], t.Seventeen[:], 6)
	jay.WriteFloat64s(b[816:864], t.Eighteen[:], 6)
	jay.WriteFloat64s(b[864:912], t.Nineteen[:], 6)
	jay.WriteFloat64s(b[912:], t.Twenty[:], 6)
	return
}

func (t *Twenty) UnmarshalJ(b []byte) error {
	if len(b) != 960 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	t.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	t.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	t.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	t.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	t.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	t.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	t.Eight = [6]float64(jay.ReadFloat64s(b[336:384], 6))
	t.Nine = [6]float64(jay.ReadFloat64s(b[384:432], 6))
	t.Ten = [6]float64(jay.ReadFloat64s(b[432:480], 6))
	t.Eleven = [6]float64(jay.ReadFloat64s(b[480:528], 6))
	t.Twelve = [6]float64(jay.ReadFloat64s(b[528:576], 6))
	t.Thirteen = [6]float64(jay.ReadFloat64s(b[576:624], 6))
	t.Fourteen = [6]float64(jay.ReadFloat64s(b[624:672], 6))
	t.Fifteen = [6]float64(jay.ReadFloat64s(b[672:720], 6))
	t.Sixteen = [6]float64(jay.ReadFloat64s(b[720:768], 6))
	t.Seventeen = [6]float64(jay.ReadFloat64s(b[768:816], 6))
	t.Eighteen = [6]float64(jay.ReadFloat64s(b[816:864], 6))
	t.Nineteen = [6]float64(jay.ReadFloat64s(b[864:912], 6))
	t.Twenty = [6]float64(jay.ReadFloat64s(b[912:], 6))
	return nil
}

func (t *TwentyOne) MarshalJ() (b []byte) {
	b = make([]byte, 1008)
	jay.WriteFloat64s(b[:48], t.One[:], 6)
	jay.WriteFloat64s(b[48:96], t.Two[:], 6)
	jay.WriteFloat64s(b[96:144], t.Three[:], 6)
	jay.WriteFloat64s(b[144:192], t.Four[:], 6)
	jay.WriteFloat64s(b[192:240], t.Five[:], 6)
	jay.WriteFloat64s(b[240:288], t.Six[:], 6)
	jay.WriteFloat64s(b[288:336], t.Seven[:], 6)
	jay.WriteFloat64s(b[336:384], t.Eight[:], 6)
	jay.WriteFloat64s(b[384:432], t.Nine[:], 6)
	jay.WriteFloat64s(b[432:480], t.Ten[:], 6)
	jay.WriteFloat64s(b[480:528], t.Eleven[:], 6)
	jay.WriteFloat64s(b[528:576], t.Twelve[:], 6)
	jay.WriteFloat64s(b[576:624], t.Thirteen[:], 6)
	jay.WriteFloat64s(b[624:672], t.Fourteen[:], 6)
	jay.WriteFloat64s(b[672:720], t.Fifteen[:], 6)
	jay.WriteFloat64s(b[720:768], t.Sixteen[:], 6)
	jay.WriteFloat64s(b[768:816], t.Seventeen[:], 6)
	jay.WriteFloat64s(b[816:864], t.Eighteen[:], 6)
	jay.WriteFloat64s(b[864:912], t.Nineteen[:], 6)
	jay.WriteFloat64s(b[912:960], t.Twenty[:], 6)
	jay.WriteFloat64s(b[960:], t.TwentyOne[:], 6)
	return
}

func (t *TwentyOne) UnmarshalJ(b []byte) error {
	if len(b) != 1008 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	t.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	t.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	t.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	t.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	t.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	t.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	t.Eight = [6]float64(jay.ReadFloat64s(b[336:384], 6))
	t.Nine = [6]float64(jay.ReadFloat64s(b[384:432], 6))
	t.Ten = [6]float64(jay.ReadFloat64s(b[432:480], 6))
	t.Eleven = [6]float64(jay.ReadFloat64s(b[480:528], 6))
	t.Twelve = [6]float64(jay.ReadFloat64s(b[528:576], 6))
	t.Thirteen = [6]float64(jay.ReadFloat64s(b[576:624], 6))
	t.Fourteen = [6]float64(jay.ReadFloat64s(b[624:672], 6))
	t.Fifteen = [6]float64(jay.ReadFloat64s(b[672:720], 6))
	t.Sixteen = [6]float64(jay.ReadFloat64s(b[720:768], 6))
	t.Seventeen = [6]float64(jay.ReadFloat64s(b[768:816], 6))
	t.Eighteen = [6]float64(jay.ReadFloat64s(b[816:864], 6))
	t.Nineteen = [6]float64(jay.ReadFloat64s(b[864:912], 6))
	t.Twenty = [6]float64(jay.ReadFloat64s(b[912:960], 6))
	t.TwentyOne = [6]float64(jay.ReadFloat64s(b[960:], 6))
	return nil
}

func (t *TwentyTwo) MarshalJ() (b []byte) {
	b = make([]byte, 1056)
	jay.WriteFloat64s(b[:48], t.One[:], 6)
	jay.WriteFloat64s(b[48:96], t.Two[:], 6)
	jay.WriteFloat64s(b[96:144], t.Three[:], 6)
	jay.WriteFloat64s(b[144:192], t.Four[:], 6)
	jay.WriteFloat64s(b[192:240], t.Five[:], 6)
	jay.WriteFloat64s(b[240:288], t.Six[:], 6)
	jay.WriteFloat64s(b[288:336], t.Seven[:], 6)
	jay.WriteFloat64s(b[336:384], t.Eight[:], 6)
	jay.WriteFloat64s(b[384:432], t.Nine[:], 6)
	jay.WriteFloat64s(b[432:480], t.Ten[:], 6)
	jay.WriteFloat64s(b[480:528], t.Eleven[:], 6)
	jay.WriteFloat64s(b[528:576], t.Twelve[:], 6)
	jay.WriteFloat64s(b[576:624], t.Thirteen[:], 6)
	jay.WriteFloat64s(b[624:672], t.Fourteen[:], 6)
	jay.WriteFloat64s(b[672:720], t.Fifteen[:], 6)
	jay.WriteFloat64s(b[720:768], t.Sixteen[:], 6)
	jay.WriteFloat64s(b[768:816], t.Seventeen[:], 6)
	jay.WriteFloat64s(b[816:864], t.Eighteen[:], 6)
	jay.WriteFloat64s(b[864:912], t.Nineteen[:], 6)
	jay.WriteFloat64s(b[912:960], t.Twenty[:], 6)
	jay.WriteFloat64s(b[960:1008], t.TwentyOne[:], 6)
	jay.WriteFloat64s(b[1008:], t.TwentyTwo[:], 6)
	return
}

func (t *TwentyTwo) UnmarshalJ(b []byte) error {
	if len(b) != 1056 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	t.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	t.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	t.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	t.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	t.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	t.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	t.Eight = [6]float64(jay.ReadFloat64s(b[336:384], 6))
	t.Nine = [6]float64(jay.ReadFloat64s(b[384:432], 6))
	t.Ten = [6]float64(jay.ReadFloat64s(b[432:480], 6))
	t.Eleven = [6]float64(jay.ReadFloat64s(b[480:528], 6))
	t.Twelve = [6]float64(jay.ReadFloat64s(b[528:576], 6))
	t.Thirteen = [6]float64(jay.ReadFloat64s(b[576:624], 6))
	t.Fourteen = [6]float64(jay.ReadFloat64s(b[624:672], 6))
	t.Fifteen = [6]float64(jay.ReadFloat64s(b[672:720], 6))
	t.Sixteen = [6]float64(jay.ReadFloat64s(b[720:768], 6))
	t.Seventeen = [6]float64(jay.ReadFloat64s(b[768:816], 6))
	t.Eighteen = [6]float64(jay.ReadFloat64s(b[816:864], 6))
	t.Nineteen = [6]float64(jay.ReadFloat64s(b[864:912], 6))
	t.Twenty = [6]float64(jay.ReadFloat64s(b[912:960], 6))
	t.TwentyOne = [6]float64(jay.ReadFloat64s(b[960:1008], 6))
	t.TwentyTwo = [6]float64(jay.ReadFloat64s(b[1008:], 6))
	return nil
}

func (t *TwentyThree) MarshalJ() (b []byte) {
	b = make([]byte, 1104)
	jay.WriteFloat64s(b[:48], t.One[:], 6)
	jay.WriteFloat64s(b[48:96], t.Two[:], 6)
	jay.WriteFloat64s(b[96:144], t.Three[:], 6)
	jay.WriteFloat64s(b[144:192], t.Four[:], 6)
	jay.WriteFloat64s(b[192:240], t.Five[:], 6)
	jay.WriteFloat64s(b[240:288], t.Six[:], 6)
	jay.WriteFloat64s(b[288:336], t.Seven[:], 6)
	jay.WriteFloat64s(b[336:384], t.Eight[:], 6)
	jay.WriteFloat64s(b[384:432], t.Nine[:], 6)
	jay.WriteFloat64s(b[432:480], t.Ten[:], 6)
	jay.WriteFloat64s(b[480:528], t.Eleven[:], 6)
	jay.WriteFloat64s(b[528:576], t.Twelve[:], 6)
	jay.WriteFloat64s(b[576:624], t.Thirteen[:], 6)
	jay.WriteFloat64s(b[624:672], t.Fourteen[:], 6)
	jay.WriteFloat64s(b[672:720], t.Fifteen[:], 6)
	jay.WriteFloat64s(b[720:768], t.Sixteen[:], 6)
	jay.WriteFloat64s(b[768:816], t.Seventeen[:], 6)
	jay.WriteFloat64s(b[816:864], t.Eighteen[:], 6)
	jay.WriteFloat64s(b[864:912], t.Nineteen[:], 6)
	jay.WriteFloat64s(b[912:960], t.Twenty[:], 6)
	jay.WriteFloat64s(b[960:1008], t.TwentyOne[:], 6)
	jay.WriteFloat64s(b[1008:1056], t.TwentyTwo[:], 6)
	jay.WriteFloat64s(b[1056:], t.TwentyThree[:], 6)
	return
}

func (t *TwentyThree) UnmarshalJ(b []byte) error {
	if len(b) != 1104 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]float64(jay.ReadFloat64s(b[:48], 6))
	t.Two = [6]float64(jay.ReadFloat64s(b[48:96], 6))
	t.Three = [6]float64(jay.ReadFloat64s(b[96:144], 6))
	t.Four = [6]float64(jay.ReadFloat64s(b[144:192], 6))
	t.Five = [6]float64(jay.ReadFloat64s(b[192:240], 6))
	t.Six = [6]float64(jay.ReadFloat64s(b[240:288], 6))
	t.Seven = [6]float64(jay.ReadFloat64s(b[288:336], 6))
	t.Eight = [6]float64(jay.ReadFloat64s(b[336:384], 6))
	t.Nine = [6]float64(jay.ReadFloat64s(b[384:432], 6))
	t.Ten = [6]float64(jay.ReadFloat64s(b[432:480], 6))
	t.Eleven = [6]float64(jay.ReadFloat64s(b[480:528], 6))
	t.Twelve = [6]float64(jay.ReadFloat64s(b[528:576], 6))
	t.Thirteen = [6]float64(jay.ReadFloat64s(b[576:624], 6))
	t.Fourteen = [6]float64(jay.ReadFloat64s(b[624:672], 6))
	t.Fifteen = [6]float64(jay.ReadFloat64s(b[672:720], 6))
	t.Sixteen = [6]float64(jay.ReadFloat64s(b[720:768], 6))
	t.Seventeen = [6]float64(jay.ReadFloat64s(b[768:816], 6))
	t.Eighteen = [6]float64(jay.ReadFloat64s(b[816:864], 6))
	t.Nineteen = [6]float64(jay.ReadFloat64s(b[864:912], 6))
	t.Twenty = [6]float64(jay.ReadFloat64s(b[912:960], 6))
	t.TwentyOne = [6]float64(jay.ReadFloat64s(b[960:1008], 6))
	t.TwentyTwo = [6]float64(jay.ReadFloat64s(b[1008:1056], 6))
	t.TwentyThree = [6]float64(jay.ReadFloat64s(b[1056:], 6))
	return nil
}
