// Code generated by Jay; DO NOT EDIT. Tool documentation available at: https://github.com/speedyhoon/jay

package main

import "github.com/speedyhoon/jay"

func (o *One) MarshalJ() (b []byte) {
	b = make([]byte, 16)
	jay.WriteComplex128(b, o.One)
	return
}

func (o *One) UnmarshalJ(b []byte) error {
	if len(b) != 16 {
		return jay.ErrUnexpectedEOB
	}
	o.One = jay.ReadComplex128(b)
	return nil
}

func (t *Two) MarshalJ() (b []byte) {
	b = make([]byte, 32)
	jay.WriteComplex128(b[:16], t.One)
	jay.WriteComplex128(b[16:], t.Two)
	return
}

func (t *Two) UnmarshalJ(b []byte) error {
	if len(b) != 32 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadComplex128(b[:16])
	t.Two = jay.ReadComplex128(b[16:])
	return nil
}

func (t *Three) MarshalJ() (b []byte) {
	b = make([]byte, 48)
	jay.WriteComplex128(b[:16], t.One)
	jay.WriteComplex128(b[16:32], t.Two)
	jay.WriteComplex128(b[32:], t.Three)
	return
}

func (t *Three) UnmarshalJ(b []byte) error {
	if len(b) != 48 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadComplex128(b[:16])
	t.Two = jay.ReadComplex128(b[16:32])
	t.Three = jay.ReadComplex128(b[32:])
	return nil
}

func (f *Four) MarshalJ() (b []byte) {
	b = make([]byte, 64)
	jay.WriteComplex128(b[:16], f.One)
	jay.WriteComplex128(b[16:32], f.Two)
	jay.WriteComplex128(b[32:48], f.Three)
	jay.WriteComplex128(b[48:], f.Four)
	return
}

func (f *Four) UnmarshalJ(b []byte) error {
	if len(b) != 64 {
		return jay.ErrUnexpectedEOB
	}
	f.One = jay.ReadComplex128(b[:16])
	f.Two = jay.ReadComplex128(b[16:32])
	f.Three = jay.ReadComplex128(b[32:48])
	f.Four = jay.ReadComplex128(b[48:])
	return nil
}

func (f *Five) MarshalJ() (b []byte) {
	b = make([]byte, 80)
	jay.WriteComplex128(b[:16], f.One)
	jay.WriteComplex128(b[16:32], f.Two)
	jay.WriteComplex128(b[32:48], f.Three)
	jay.WriteComplex128(b[48:64], f.Four)
	jay.WriteComplex128(b[64:], f.Five)
	return
}

func (f *Five) UnmarshalJ(b []byte) error {
	if len(b) != 80 {
		return jay.ErrUnexpectedEOB
	}
	f.One = jay.ReadComplex128(b[:16])
	f.Two = jay.ReadComplex128(b[16:32])
	f.Three = jay.ReadComplex128(b[32:48])
	f.Four = jay.ReadComplex128(b[48:64])
	f.Five = jay.ReadComplex128(b[64:])
	return nil
}

func (s *Six) MarshalJ() (b []byte) {
	b = make([]byte, 96)
	jay.WriteComplex128(b[:16], s.One)
	jay.WriteComplex128(b[16:32], s.Two)
	jay.WriteComplex128(b[32:48], s.Three)
	jay.WriteComplex128(b[48:64], s.Four)
	jay.WriteComplex128(b[64:80], s.Five)
	jay.WriteComplex128(b[80:], s.Six)
	return
}

func (s *Six) UnmarshalJ(b []byte) error {
	if len(b) != 96 {
		return jay.ErrUnexpectedEOB
	}
	s.One = jay.ReadComplex128(b[:16])
	s.Two = jay.ReadComplex128(b[16:32])
	s.Three = jay.ReadComplex128(b[32:48])
	s.Four = jay.ReadComplex128(b[48:64])
	s.Five = jay.ReadComplex128(b[64:80])
	s.Six = jay.ReadComplex128(b[80:])
	return nil
}

func (s *Seven) MarshalJ() (b []byte) {
	b = make([]byte, 112)
	jay.WriteComplex128(b[:16], s.One)
	jay.WriteComplex128(b[16:32], s.Two)
	jay.WriteComplex128(b[32:48], s.Three)
	jay.WriteComplex128(b[48:64], s.Four)
	jay.WriteComplex128(b[64:80], s.Five)
	jay.WriteComplex128(b[80:96], s.Six)
	jay.WriteComplex128(b[96:], s.Seven)
	return
}

func (s *Seven) UnmarshalJ(b []byte) error {
	if len(b) != 112 {
		return jay.ErrUnexpectedEOB
	}
	s.One = jay.ReadComplex128(b[:16])
	s.Two = jay.ReadComplex128(b[16:32])
	s.Three = jay.ReadComplex128(b[32:48])
	s.Four = jay.ReadComplex128(b[48:64])
	s.Five = jay.ReadComplex128(b[64:80])
	s.Six = jay.ReadComplex128(b[80:96])
	s.Seven = jay.ReadComplex128(b[96:])
	return nil
}

func (e *Eight) MarshalJ() (b []byte) {
	b = make([]byte, 128)
	jay.WriteComplex128(b[:16], e.One)
	jay.WriteComplex128(b[16:32], e.Two)
	jay.WriteComplex128(b[32:48], e.Three)
	jay.WriteComplex128(b[48:64], e.Four)
	jay.WriteComplex128(b[64:80], e.Five)
	jay.WriteComplex128(b[80:96], e.Six)
	jay.WriteComplex128(b[96:112], e.Seven)
	jay.WriteComplex128(b[112:], e.Eight)
	return
}

func (e *Eight) UnmarshalJ(b []byte) error {
	if len(b) != 128 {
		return jay.ErrUnexpectedEOB
	}
	e.One = jay.ReadComplex128(b[:16])
	e.Two = jay.ReadComplex128(b[16:32])
	e.Three = jay.ReadComplex128(b[32:48])
	e.Four = jay.ReadComplex128(b[48:64])
	e.Five = jay.ReadComplex128(b[64:80])
	e.Six = jay.ReadComplex128(b[80:96])
	e.Seven = jay.ReadComplex128(b[96:112])
	e.Eight = jay.ReadComplex128(b[112:])
	return nil
}

func (n *Nine) MarshalJ() (b []byte) {
	b = make([]byte, 144)
	jay.WriteComplex128(b[:16], n.One)
	jay.WriteComplex128(b[16:32], n.Two)
	jay.WriteComplex128(b[32:48], n.Three)
	jay.WriteComplex128(b[48:64], n.Four)
	jay.WriteComplex128(b[64:80], n.Five)
	jay.WriteComplex128(b[80:96], n.Six)
	jay.WriteComplex128(b[96:112], n.Seven)
	jay.WriteComplex128(b[112:128], n.Eight)
	jay.WriteComplex128(b[128:], n.Nine)
	return
}

func (n *Nine) UnmarshalJ(b []byte) error {
	if len(b) != 144 {
		return jay.ErrUnexpectedEOB
	}
	n.One = jay.ReadComplex128(b[:16])
	n.Two = jay.ReadComplex128(b[16:32])
	n.Three = jay.ReadComplex128(b[32:48])
	n.Four = jay.ReadComplex128(b[48:64])
	n.Five = jay.ReadComplex128(b[64:80])
	n.Six = jay.ReadComplex128(b[80:96])
	n.Seven = jay.ReadComplex128(b[96:112])
	n.Eight = jay.ReadComplex128(b[112:128])
	n.Nine = jay.ReadComplex128(b[128:])
	return nil
}

func (t *Ten) MarshalJ() (b []byte) {
	b = make([]byte, 160)
	jay.WriteComplex128(b[:16], t.One)
	jay.WriteComplex128(b[16:32], t.Two)
	jay.WriteComplex128(b[32:48], t.Three)
	jay.WriteComplex128(b[48:64], t.Four)
	jay.WriteComplex128(b[64:80], t.Five)
	jay.WriteComplex128(b[80:96], t.Six)
	jay.WriteComplex128(b[96:112], t.Seven)
	jay.WriteComplex128(b[112:128], t.Eight)
	jay.WriteComplex128(b[128:144], t.Nine)
	jay.WriteComplex128(b[144:], t.Ten)
	return
}

func (t *Ten) UnmarshalJ(b []byte) error {
	if len(b) != 160 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadComplex128(b[:16])
	t.Two = jay.ReadComplex128(b[16:32])
	t.Three = jay.ReadComplex128(b[32:48])
	t.Four = jay.ReadComplex128(b[48:64])
	t.Five = jay.ReadComplex128(b[64:80])
	t.Six = jay.ReadComplex128(b[80:96])
	t.Seven = jay.ReadComplex128(b[96:112])
	t.Eight = jay.ReadComplex128(b[112:128])
	t.Nine = jay.ReadComplex128(b[128:144])
	t.Ten = jay.ReadComplex128(b[144:])
	return nil
}

func (e *Eleven) MarshalJ() (b []byte) {
	b = make([]byte, 176)
	jay.WriteComplex128(b[:16], e.One)
	jay.WriteComplex128(b[16:32], e.Two)
	jay.WriteComplex128(b[32:48], e.Three)
	jay.WriteComplex128(b[48:64], e.Four)
	jay.WriteComplex128(b[64:80], e.Five)
	jay.WriteComplex128(b[80:96], e.Six)
	jay.WriteComplex128(b[96:112], e.Seven)
	jay.WriteComplex128(b[112:128], e.Eight)
	jay.WriteComplex128(b[128:144], e.Nine)
	jay.WriteComplex128(b[144:160], e.Ten)
	jay.WriteComplex128(b[160:], e.Eleven)
	return
}

func (e *Eleven) UnmarshalJ(b []byte) error {
	if len(b) != 176 {
		return jay.ErrUnexpectedEOB
	}
	e.One = jay.ReadComplex128(b[:16])
	e.Two = jay.ReadComplex128(b[16:32])
	e.Three = jay.ReadComplex128(b[32:48])
	e.Four = jay.ReadComplex128(b[48:64])
	e.Five = jay.ReadComplex128(b[64:80])
	e.Six = jay.ReadComplex128(b[80:96])
	e.Seven = jay.ReadComplex128(b[96:112])
	e.Eight = jay.ReadComplex128(b[112:128])
	e.Nine = jay.ReadComplex128(b[128:144])
	e.Ten = jay.ReadComplex128(b[144:160])
	e.Eleven = jay.ReadComplex128(b[160:])
	return nil
}

func (t *Twelve) MarshalJ() (b []byte) {
	b = make([]byte, 192)
	jay.WriteComplex128(b[:16], t.One)
	jay.WriteComplex128(b[16:32], t.Two)
	jay.WriteComplex128(b[32:48], t.Three)
	jay.WriteComplex128(b[48:64], t.Four)
	jay.WriteComplex128(b[64:80], t.Five)
	jay.WriteComplex128(b[80:96], t.Six)
	jay.WriteComplex128(b[96:112], t.Seven)
	jay.WriteComplex128(b[112:128], t.Eight)
	jay.WriteComplex128(b[128:144], t.Nine)
	jay.WriteComplex128(b[144:160], t.Ten)
	jay.WriteComplex128(b[160:176], t.Eleven)
	jay.WriteComplex128(b[176:], t.Twelve)
	return
}

func (t *Twelve) UnmarshalJ(b []byte) error {
	if len(b) != 192 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadComplex128(b[:16])
	t.Two = jay.ReadComplex128(b[16:32])
	t.Three = jay.ReadComplex128(b[32:48])
	t.Four = jay.ReadComplex128(b[48:64])
	t.Five = jay.ReadComplex128(b[64:80])
	t.Six = jay.ReadComplex128(b[80:96])
	t.Seven = jay.ReadComplex128(b[96:112])
	t.Eight = jay.ReadComplex128(b[112:128])
	t.Nine = jay.ReadComplex128(b[128:144])
	t.Ten = jay.ReadComplex128(b[144:160])
	t.Eleven = jay.ReadComplex128(b[160:176])
	t.Twelve = jay.ReadComplex128(b[176:])
	return nil
}

func (t *Thirteen) MarshalJ() (b []byte) {
	b = make([]byte, 208)
	jay.WriteComplex128(b[:16], t.One)
	jay.WriteComplex128(b[16:32], t.Two)
	jay.WriteComplex128(b[32:48], t.Three)
	jay.WriteComplex128(b[48:64], t.Four)
	jay.WriteComplex128(b[64:80], t.Five)
	jay.WriteComplex128(b[80:96], t.Six)
	jay.WriteComplex128(b[96:112], t.Seven)
	jay.WriteComplex128(b[112:128], t.Eight)
	jay.WriteComplex128(b[128:144], t.Nine)
	jay.WriteComplex128(b[144:160], t.Ten)
	jay.WriteComplex128(b[160:176], t.Eleven)
	jay.WriteComplex128(b[176:192], t.Twelve)
	jay.WriteComplex128(b[192:], t.Thirteen)
	return
}

func (t *Thirteen) UnmarshalJ(b []byte) error {
	if len(b) != 208 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadComplex128(b[:16])
	t.Two = jay.ReadComplex128(b[16:32])
	t.Three = jay.ReadComplex128(b[32:48])
	t.Four = jay.ReadComplex128(b[48:64])
	t.Five = jay.ReadComplex128(b[64:80])
	t.Six = jay.ReadComplex128(b[80:96])
	t.Seven = jay.ReadComplex128(b[96:112])
	t.Eight = jay.ReadComplex128(b[112:128])
	t.Nine = jay.ReadComplex128(b[128:144])
	t.Ten = jay.ReadComplex128(b[144:160])
	t.Eleven = jay.ReadComplex128(b[160:176])
	t.Twelve = jay.ReadComplex128(b[176:192])
	t.Thirteen = jay.ReadComplex128(b[192:])
	return nil
}

func (f *Fourteen) MarshalJ() (b []byte) {
	b = make([]byte, 224)
	jay.WriteComplex128(b[:16], f.One)
	jay.WriteComplex128(b[16:32], f.Two)
	jay.WriteComplex128(b[32:48], f.Three)
	jay.WriteComplex128(b[48:64], f.Four)
	jay.WriteComplex128(b[64:80], f.Five)
	jay.WriteComplex128(b[80:96], f.Six)
	jay.WriteComplex128(b[96:112], f.Seven)
	jay.WriteComplex128(b[112:128], f.Eight)
	jay.WriteComplex128(b[128:144], f.Nine)
	jay.WriteComplex128(b[144:160], f.Ten)
	jay.WriteComplex128(b[160:176], f.Eleven)
	jay.WriteComplex128(b[176:192], f.Twelve)
	jay.WriteComplex128(b[192:208], f.Thirteen)
	jay.WriteComplex128(b[208:], f.Fourteen)
	return
}

func (f *Fourteen) UnmarshalJ(b []byte) error {
	if len(b) != 224 {
		return jay.ErrUnexpectedEOB
	}
	f.One = jay.ReadComplex128(b[:16])
	f.Two = jay.ReadComplex128(b[16:32])
	f.Three = jay.ReadComplex128(b[32:48])
	f.Four = jay.ReadComplex128(b[48:64])
	f.Five = jay.ReadComplex128(b[64:80])
	f.Six = jay.ReadComplex128(b[80:96])
	f.Seven = jay.ReadComplex128(b[96:112])
	f.Eight = jay.ReadComplex128(b[112:128])
	f.Nine = jay.ReadComplex128(b[128:144])
	f.Ten = jay.ReadComplex128(b[144:160])
	f.Eleven = jay.ReadComplex128(b[160:176])
	f.Twelve = jay.ReadComplex128(b[176:192])
	f.Thirteen = jay.ReadComplex128(b[192:208])
	f.Fourteen = jay.ReadComplex128(b[208:])
	return nil
}

func (f *Fifteen) MarshalJ() (b []byte) {
	b = make([]byte, 240)
	jay.WriteComplex128(b[:16], f.One)
	jay.WriteComplex128(b[16:32], f.Two)
	jay.WriteComplex128(b[32:48], f.Three)
	jay.WriteComplex128(b[48:64], f.Four)
	jay.WriteComplex128(b[64:80], f.Five)
	jay.WriteComplex128(b[80:96], f.Six)
	jay.WriteComplex128(b[96:112], f.Seven)
	jay.WriteComplex128(b[112:128], f.Eight)
	jay.WriteComplex128(b[128:144], f.Nine)
	jay.WriteComplex128(b[144:160], f.Ten)
	jay.WriteComplex128(b[160:176], f.Eleven)
	jay.WriteComplex128(b[176:192], f.Twelve)
	jay.WriteComplex128(b[192:208], f.Thirteen)
	jay.WriteComplex128(b[208:224], f.Fourteen)
	jay.WriteComplex128(b[224:], f.Fifteen)
	return
}

func (f *Fifteen) UnmarshalJ(b []byte) error {
	if len(b) != 240 {
		return jay.ErrUnexpectedEOB
	}
	f.One = jay.ReadComplex128(b[:16])
	f.Two = jay.ReadComplex128(b[16:32])
	f.Three = jay.ReadComplex128(b[32:48])
	f.Four = jay.ReadComplex128(b[48:64])
	f.Five = jay.ReadComplex128(b[64:80])
	f.Six = jay.ReadComplex128(b[80:96])
	f.Seven = jay.ReadComplex128(b[96:112])
	f.Eight = jay.ReadComplex128(b[112:128])
	f.Nine = jay.ReadComplex128(b[128:144])
	f.Ten = jay.ReadComplex128(b[144:160])
	f.Eleven = jay.ReadComplex128(b[160:176])
	f.Twelve = jay.ReadComplex128(b[176:192])
	f.Thirteen = jay.ReadComplex128(b[192:208])
	f.Fourteen = jay.ReadComplex128(b[208:224])
	f.Fifteen = jay.ReadComplex128(b[224:])
	return nil
}

func (s *Sixteen) MarshalJ() (b []byte) {
	b = make([]byte, 256)
	jay.WriteComplex128(b[:16], s.One)
	jay.WriteComplex128(b[16:32], s.Two)
	jay.WriteComplex128(b[32:48], s.Three)
	jay.WriteComplex128(b[48:64], s.Four)
	jay.WriteComplex128(b[64:80], s.Five)
	jay.WriteComplex128(b[80:96], s.Six)
	jay.WriteComplex128(b[96:112], s.Seven)
	jay.WriteComplex128(b[112:128], s.Eight)
	jay.WriteComplex128(b[128:144], s.Nine)
	jay.WriteComplex128(b[144:160], s.Ten)
	jay.WriteComplex128(b[160:176], s.Eleven)
	jay.WriteComplex128(b[176:192], s.Twelve)
	jay.WriteComplex128(b[192:208], s.Thirteen)
	jay.WriteComplex128(b[208:224], s.Fourteen)
	jay.WriteComplex128(b[224:240], s.Fifteen)
	jay.WriteComplex128(b[240:], s.Sixteen)
	return
}

func (s *Sixteen) UnmarshalJ(b []byte) error {
	if len(b) != 256 {
		return jay.ErrUnexpectedEOB
	}
	s.One = jay.ReadComplex128(b[:16])
	s.Two = jay.ReadComplex128(b[16:32])
	s.Three = jay.ReadComplex128(b[32:48])
	s.Four = jay.ReadComplex128(b[48:64])
	s.Five = jay.ReadComplex128(b[64:80])
	s.Six = jay.ReadComplex128(b[80:96])
	s.Seven = jay.ReadComplex128(b[96:112])
	s.Eight = jay.ReadComplex128(b[112:128])
	s.Nine = jay.ReadComplex128(b[128:144])
	s.Ten = jay.ReadComplex128(b[144:160])
	s.Eleven = jay.ReadComplex128(b[160:176])
	s.Twelve = jay.ReadComplex128(b[176:192])
	s.Thirteen = jay.ReadComplex128(b[192:208])
	s.Fourteen = jay.ReadComplex128(b[208:224])
	s.Fifteen = jay.ReadComplex128(b[224:240])
	s.Sixteen = jay.ReadComplex128(b[240:])
	return nil
}

func (s *Seventeen) MarshalJ() (b []byte) {
	b = make([]byte, 272)
	jay.WriteComplex128(b[:16], s.One)
	jay.WriteComplex128(b[16:32], s.Two)
	jay.WriteComplex128(b[32:48], s.Three)
	jay.WriteComplex128(b[48:64], s.Four)
	jay.WriteComplex128(b[64:80], s.Five)
	jay.WriteComplex128(b[80:96], s.Six)
	jay.WriteComplex128(b[96:112], s.Seven)
	jay.WriteComplex128(b[112:128], s.Eight)
	jay.WriteComplex128(b[128:144], s.Nine)
	jay.WriteComplex128(b[144:160], s.Ten)
	jay.WriteComplex128(b[160:176], s.Eleven)
	jay.WriteComplex128(b[176:192], s.Twelve)
	jay.WriteComplex128(b[192:208], s.Thirteen)
	jay.WriteComplex128(b[208:224], s.Fourteen)
	jay.WriteComplex128(b[224:240], s.Fifteen)
	jay.WriteComplex128(b[240:256], s.Sixteen)
	jay.WriteComplex128(b[256:], s.Seventeen)
	return
}

func (s *Seventeen) UnmarshalJ(b []byte) error {
	if len(b) != 272 {
		return jay.ErrUnexpectedEOB
	}
	s.One = jay.ReadComplex128(b[:16])
	s.Two = jay.ReadComplex128(b[16:32])
	s.Three = jay.ReadComplex128(b[32:48])
	s.Four = jay.ReadComplex128(b[48:64])
	s.Five = jay.ReadComplex128(b[64:80])
	s.Six = jay.ReadComplex128(b[80:96])
	s.Seven = jay.ReadComplex128(b[96:112])
	s.Eight = jay.ReadComplex128(b[112:128])
	s.Nine = jay.ReadComplex128(b[128:144])
	s.Ten = jay.ReadComplex128(b[144:160])
	s.Eleven = jay.ReadComplex128(b[160:176])
	s.Twelve = jay.ReadComplex128(b[176:192])
	s.Thirteen = jay.ReadComplex128(b[192:208])
	s.Fourteen = jay.ReadComplex128(b[208:224])
	s.Fifteen = jay.ReadComplex128(b[224:240])
	s.Sixteen = jay.ReadComplex128(b[240:256])
	s.Seventeen = jay.ReadComplex128(b[256:])
	return nil
}

func (e *Eighteen) MarshalJ() (b []byte) {
	b = make([]byte, 288)
	jay.WriteComplex128(b[:16], e.One)
	jay.WriteComplex128(b[16:32], e.Two)
	jay.WriteComplex128(b[32:48], e.Three)
	jay.WriteComplex128(b[48:64], e.Four)
	jay.WriteComplex128(b[64:80], e.Five)
	jay.WriteComplex128(b[80:96], e.Six)
	jay.WriteComplex128(b[96:112], e.Seven)
	jay.WriteComplex128(b[112:128], e.Eight)
	jay.WriteComplex128(b[128:144], e.Nine)
	jay.WriteComplex128(b[144:160], e.Ten)
	jay.WriteComplex128(b[160:176], e.Eleven)
	jay.WriteComplex128(b[176:192], e.Twelve)
	jay.WriteComplex128(b[192:208], e.Thirteen)
	jay.WriteComplex128(b[208:224], e.Fourteen)
	jay.WriteComplex128(b[224:240], e.Fifteen)
	jay.WriteComplex128(b[240:256], e.Sixteen)
	jay.WriteComplex128(b[256:272], e.Seventeen)
	jay.WriteComplex128(b[272:], e.Eighteen)
	return
}

func (e *Eighteen) UnmarshalJ(b []byte) error {
	if len(b) != 288 {
		return jay.ErrUnexpectedEOB
	}
	e.One = jay.ReadComplex128(b[:16])
	e.Two = jay.ReadComplex128(b[16:32])
	e.Three = jay.ReadComplex128(b[32:48])
	e.Four = jay.ReadComplex128(b[48:64])
	e.Five = jay.ReadComplex128(b[64:80])
	e.Six = jay.ReadComplex128(b[80:96])
	e.Seven = jay.ReadComplex128(b[96:112])
	e.Eight = jay.ReadComplex128(b[112:128])
	e.Nine = jay.ReadComplex128(b[128:144])
	e.Ten = jay.ReadComplex128(b[144:160])
	e.Eleven = jay.ReadComplex128(b[160:176])
	e.Twelve = jay.ReadComplex128(b[176:192])
	e.Thirteen = jay.ReadComplex128(b[192:208])
	e.Fourteen = jay.ReadComplex128(b[208:224])
	e.Fifteen = jay.ReadComplex128(b[224:240])
	e.Sixteen = jay.ReadComplex128(b[240:256])
	e.Seventeen = jay.ReadComplex128(b[256:272])
	e.Eighteen = jay.ReadComplex128(b[272:])
	return nil
}

func (n *Nineteen) MarshalJ() (b []byte) {
	b = make([]byte, 304)
	jay.WriteComplex128(b[:16], n.One)
	jay.WriteComplex128(b[16:32], n.Two)
	jay.WriteComplex128(b[32:48], n.Three)
	jay.WriteComplex128(b[48:64], n.Four)
	jay.WriteComplex128(b[64:80], n.Five)
	jay.WriteComplex128(b[80:96], n.Six)
	jay.WriteComplex128(b[96:112], n.Seven)
	jay.WriteComplex128(b[112:128], n.Eight)
	jay.WriteComplex128(b[128:144], n.Nine)
	jay.WriteComplex128(b[144:160], n.Ten)
	jay.WriteComplex128(b[160:176], n.Eleven)
	jay.WriteComplex128(b[176:192], n.Twelve)
	jay.WriteComplex128(b[192:208], n.Thirteen)
	jay.WriteComplex128(b[208:224], n.Fourteen)
	jay.WriteComplex128(b[224:240], n.Fifteen)
	jay.WriteComplex128(b[240:256], n.Sixteen)
	jay.WriteComplex128(b[256:272], n.Seventeen)
	jay.WriteComplex128(b[272:288], n.Eighteen)
	jay.WriteComplex128(b[288:], n.Nineteen)
	return
}

func (n *Nineteen) UnmarshalJ(b []byte) error {
	if len(b) != 304 {
		return jay.ErrUnexpectedEOB
	}
	n.One = jay.ReadComplex128(b[:16])
	n.Two = jay.ReadComplex128(b[16:32])
	n.Three = jay.ReadComplex128(b[32:48])
	n.Four = jay.ReadComplex128(b[48:64])
	n.Five = jay.ReadComplex128(b[64:80])
	n.Six = jay.ReadComplex128(b[80:96])
	n.Seven = jay.ReadComplex128(b[96:112])
	n.Eight = jay.ReadComplex128(b[112:128])
	n.Nine = jay.ReadComplex128(b[128:144])
	n.Ten = jay.ReadComplex128(b[144:160])
	n.Eleven = jay.ReadComplex128(b[160:176])
	n.Twelve = jay.ReadComplex128(b[176:192])
	n.Thirteen = jay.ReadComplex128(b[192:208])
	n.Fourteen = jay.ReadComplex128(b[208:224])
	n.Fifteen = jay.ReadComplex128(b[224:240])
	n.Sixteen = jay.ReadComplex128(b[240:256])
	n.Seventeen = jay.ReadComplex128(b[256:272])
	n.Eighteen = jay.ReadComplex128(b[272:288])
	n.Nineteen = jay.ReadComplex128(b[288:])
	return nil
}

func (t *Twenty) MarshalJ() (b []byte) {
	b = make([]byte, 320)
	jay.WriteComplex128(b[:16], t.One)
	jay.WriteComplex128(b[16:32], t.Two)
	jay.WriteComplex128(b[32:48], t.Three)
	jay.WriteComplex128(b[48:64], t.Four)
	jay.WriteComplex128(b[64:80], t.Five)
	jay.WriteComplex128(b[80:96], t.Six)
	jay.WriteComplex128(b[96:112], t.Seven)
	jay.WriteComplex128(b[112:128], t.Eight)
	jay.WriteComplex128(b[128:144], t.Nine)
	jay.WriteComplex128(b[144:160], t.Ten)
	jay.WriteComplex128(b[160:176], t.Eleven)
	jay.WriteComplex128(b[176:192], t.Twelve)
	jay.WriteComplex128(b[192:208], t.Thirteen)
	jay.WriteComplex128(b[208:224], t.Fourteen)
	jay.WriteComplex128(b[224:240], t.Fifteen)
	jay.WriteComplex128(b[240:256], t.Sixteen)
	jay.WriteComplex128(b[256:272], t.Seventeen)
	jay.WriteComplex128(b[272:288], t.Eighteen)
	jay.WriteComplex128(b[288:304], t.Nineteen)
	jay.WriteComplex128(b[304:], t.Twenty)
	return
}

func (t *Twenty) UnmarshalJ(b []byte) error {
	if len(b) != 320 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadComplex128(b[:16])
	t.Two = jay.ReadComplex128(b[16:32])
	t.Three = jay.ReadComplex128(b[32:48])
	t.Four = jay.ReadComplex128(b[48:64])
	t.Five = jay.ReadComplex128(b[64:80])
	t.Six = jay.ReadComplex128(b[80:96])
	t.Seven = jay.ReadComplex128(b[96:112])
	t.Eight = jay.ReadComplex128(b[112:128])
	t.Nine = jay.ReadComplex128(b[128:144])
	t.Ten = jay.ReadComplex128(b[144:160])
	t.Eleven = jay.ReadComplex128(b[160:176])
	t.Twelve = jay.ReadComplex128(b[176:192])
	t.Thirteen = jay.ReadComplex128(b[192:208])
	t.Fourteen = jay.ReadComplex128(b[208:224])
	t.Fifteen = jay.ReadComplex128(b[224:240])
	t.Sixteen = jay.ReadComplex128(b[240:256])
	t.Seventeen = jay.ReadComplex128(b[256:272])
	t.Eighteen = jay.ReadComplex128(b[272:288])
	t.Nineteen = jay.ReadComplex128(b[288:304])
	t.Twenty = jay.ReadComplex128(b[304:])
	return nil
}

func (t *TwentyOne) MarshalJ() (b []byte) {
	b = make([]byte, 336)
	jay.WriteComplex128(b[:16], t.One)
	jay.WriteComplex128(b[16:32], t.Two)
	jay.WriteComplex128(b[32:48], t.Three)
	jay.WriteComplex128(b[48:64], t.Four)
	jay.WriteComplex128(b[64:80], t.Five)
	jay.WriteComplex128(b[80:96], t.Six)
	jay.WriteComplex128(b[96:112], t.Seven)
	jay.WriteComplex128(b[112:128], t.Eight)
	jay.WriteComplex128(b[128:144], t.Nine)
	jay.WriteComplex128(b[144:160], t.Ten)
	jay.WriteComplex128(b[160:176], t.Eleven)
	jay.WriteComplex128(b[176:192], t.Twelve)
	jay.WriteComplex128(b[192:208], t.Thirteen)
	jay.WriteComplex128(b[208:224], t.Fourteen)
	jay.WriteComplex128(b[224:240], t.Fifteen)
	jay.WriteComplex128(b[240:256], t.Sixteen)
	jay.WriteComplex128(b[256:272], t.Seventeen)
	jay.WriteComplex128(b[272:288], t.Eighteen)
	jay.WriteComplex128(b[288:304], t.Nineteen)
	jay.WriteComplex128(b[304:320], t.Twenty)
	jay.WriteComplex128(b[320:], t.TwentyOne)
	return
}

func (t *TwentyOne) UnmarshalJ(b []byte) error {
	if len(b) != 336 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadComplex128(b[:16])
	t.Two = jay.ReadComplex128(b[16:32])
	t.Three = jay.ReadComplex128(b[32:48])
	t.Four = jay.ReadComplex128(b[48:64])
	t.Five = jay.ReadComplex128(b[64:80])
	t.Six = jay.ReadComplex128(b[80:96])
	t.Seven = jay.ReadComplex128(b[96:112])
	t.Eight = jay.ReadComplex128(b[112:128])
	t.Nine = jay.ReadComplex128(b[128:144])
	t.Ten = jay.ReadComplex128(b[144:160])
	t.Eleven = jay.ReadComplex128(b[160:176])
	t.Twelve = jay.ReadComplex128(b[176:192])
	t.Thirteen = jay.ReadComplex128(b[192:208])
	t.Fourteen = jay.ReadComplex128(b[208:224])
	t.Fifteen = jay.ReadComplex128(b[224:240])
	t.Sixteen = jay.ReadComplex128(b[240:256])
	t.Seventeen = jay.ReadComplex128(b[256:272])
	t.Eighteen = jay.ReadComplex128(b[272:288])
	t.Nineteen = jay.ReadComplex128(b[288:304])
	t.Twenty = jay.ReadComplex128(b[304:320])
	t.TwentyOne = jay.ReadComplex128(b[320:])
	return nil
}

func (t *TwentyTwo) MarshalJ() (b []byte) {
	b = make([]byte, 352)
	jay.WriteComplex128(b[:16], t.One)
	jay.WriteComplex128(b[16:32], t.Two)
	jay.WriteComplex128(b[32:48], t.Three)
	jay.WriteComplex128(b[48:64], t.Four)
	jay.WriteComplex128(b[64:80], t.Five)
	jay.WriteComplex128(b[80:96], t.Six)
	jay.WriteComplex128(b[96:112], t.Seven)
	jay.WriteComplex128(b[112:128], t.Eight)
	jay.WriteComplex128(b[128:144], t.Nine)
	jay.WriteComplex128(b[144:160], t.Ten)
	jay.WriteComplex128(b[160:176], t.Eleven)
	jay.WriteComplex128(b[176:192], t.Twelve)
	jay.WriteComplex128(b[192:208], t.Thirteen)
	jay.WriteComplex128(b[208:224], t.Fourteen)
	jay.WriteComplex128(b[224:240], t.Fifteen)
	jay.WriteComplex128(b[240:256], t.Sixteen)
	jay.WriteComplex128(b[256:272], t.Seventeen)
	jay.WriteComplex128(b[272:288], t.Eighteen)
	jay.WriteComplex128(b[288:304], t.Nineteen)
	jay.WriteComplex128(b[304:320], t.Twenty)
	jay.WriteComplex128(b[320:336], t.TwentyOne)
	jay.WriteComplex128(b[336:], t.TwentyTwo)
	return
}

func (t *TwentyTwo) UnmarshalJ(b []byte) error {
	if len(b) != 352 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadComplex128(b[:16])
	t.Two = jay.ReadComplex128(b[16:32])
	t.Three = jay.ReadComplex128(b[32:48])
	t.Four = jay.ReadComplex128(b[48:64])
	t.Five = jay.ReadComplex128(b[64:80])
	t.Six = jay.ReadComplex128(b[80:96])
	t.Seven = jay.ReadComplex128(b[96:112])
	t.Eight = jay.ReadComplex128(b[112:128])
	t.Nine = jay.ReadComplex128(b[128:144])
	t.Ten = jay.ReadComplex128(b[144:160])
	t.Eleven = jay.ReadComplex128(b[160:176])
	t.Twelve = jay.ReadComplex128(b[176:192])
	t.Thirteen = jay.ReadComplex128(b[192:208])
	t.Fourteen = jay.ReadComplex128(b[208:224])
	t.Fifteen = jay.ReadComplex128(b[224:240])
	t.Sixteen = jay.ReadComplex128(b[240:256])
	t.Seventeen = jay.ReadComplex128(b[256:272])
	t.Eighteen = jay.ReadComplex128(b[272:288])
	t.Nineteen = jay.ReadComplex128(b[288:304])
	t.Twenty = jay.ReadComplex128(b[304:320])
	t.TwentyOne = jay.ReadComplex128(b[320:336])
	t.TwentyTwo = jay.ReadComplex128(b[336:])
	return nil
}

func (t *TwentyThree) MarshalJ() (b []byte) {
	b = make([]byte, 368)
	jay.WriteComplex128(b[:16], t.One)
	jay.WriteComplex128(b[16:32], t.Two)
	jay.WriteComplex128(b[32:48], t.Three)
	jay.WriteComplex128(b[48:64], t.Four)
	jay.WriteComplex128(b[64:80], t.Five)
	jay.WriteComplex128(b[80:96], t.Six)
	jay.WriteComplex128(b[96:112], t.Seven)
	jay.WriteComplex128(b[112:128], t.Eight)
	jay.WriteComplex128(b[128:144], t.Nine)
	jay.WriteComplex128(b[144:160], t.Ten)
	jay.WriteComplex128(b[160:176], t.Eleven)
	jay.WriteComplex128(b[176:192], t.Twelve)
	jay.WriteComplex128(b[192:208], t.Thirteen)
	jay.WriteComplex128(b[208:224], t.Fourteen)
	jay.WriteComplex128(b[224:240], t.Fifteen)
	jay.WriteComplex128(b[240:256], t.Sixteen)
	jay.WriteComplex128(b[256:272], t.Seventeen)
	jay.WriteComplex128(b[272:288], t.Eighteen)
	jay.WriteComplex128(b[288:304], t.Nineteen)
	jay.WriteComplex128(b[304:320], t.Twenty)
	jay.WriteComplex128(b[320:336], t.TwentyOne)
	jay.WriteComplex128(b[336:352], t.TwentyTwo)
	jay.WriteComplex128(b[352:], t.TwentyThree)
	return
}

func (t *TwentyThree) UnmarshalJ(b []byte) error {
	if len(b) != 368 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadComplex128(b[:16])
	t.Two = jay.ReadComplex128(b[16:32])
	t.Three = jay.ReadComplex128(b[32:48])
	t.Four = jay.ReadComplex128(b[48:64])
	t.Five = jay.ReadComplex128(b[64:80])
	t.Six = jay.ReadComplex128(b[80:96])
	t.Seven = jay.ReadComplex128(b[96:112])
	t.Eight = jay.ReadComplex128(b[112:128])
	t.Nine = jay.ReadComplex128(b[128:144])
	t.Ten = jay.ReadComplex128(b[144:160])
	t.Eleven = jay.ReadComplex128(b[160:176])
	t.Twelve = jay.ReadComplex128(b[176:192])
	t.Thirteen = jay.ReadComplex128(b[192:208])
	t.Fourteen = jay.ReadComplex128(b[208:224])
	t.Fifteen = jay.ReadComplex128(b[224:240])
	t.Sixteen = jay.ReadComplex128(b[240:256])
	t.Seventeen = jay.ReadComplex128(b[256:272])
	t.Eighteen = jay.ReadComplex128(b[272:288])
	t.Nineteen = jay.ReadComplex128(b[288:304])
	t.Twenty = jay.ReadComplex128(b[304:320])
	t.TwentyOne = jay.ReadComplex128(b[320:336])
	t.TwentyTwo = jay.ReadComplex128(b[336:352])
	t.TwentyThree = jay.ReadComplex128(b[352:])
	return nil
}
