// Code generated by Jay; DO NOT EDIT. Tool documentation available at: https://github.com/speedyhoon/jay

package main

import "github.com/speedyhoon/jay"

func (o *One) MarshalJ() (b []byte) {
	b = make([]byte, 96)
	jay.WriteComplex128s(b, o.One[:])
	return
}

func (o *One) UnmarshalJ(b []byte) error {
	if len(b) != 96 {
		return jay.ErrUnexpectedEOB
	}
	o.One = [6]complex128(jay.ReadComplex128s(b, 6))
	return nil
}

func (t *Two) MarshalJ() (b []byte) {
	b = make([]byte, 192)
	jay.WriteComplex128s(b[:96], t.One[:])
	jay.WriteComplex128s(b[96:], t.Two[:])
	return
}

func (t *Two) UnmarshalJ(b []byte) error {
	if len(b) != 192 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	t.Two = [6]complex128(jay.ReadComplex128s(b[96:], 6))
	return nil
}

func (t *Three) MarshalJ() (b []byte) {
	b = make([]byte, 288)
	jay.WriteComplex128s(b[:96], t.One[:])
	jay.WriteComplex128s(b[96:192], t.Two[:])
	jay.WriteComplex128s(b[192:], t.Three[:])
	return
}

func (t *Three) UnmarshalJ(b []byte) error {
	if len(b) != 288 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	t.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	t.Three = [6]complex128(jay.ReadComplex128s(b[192:], 6))
	return nil
}

func (f *Four) MarshalJ() (b []byte) {
	b = make([]byte, 384)
	jay.WriteComplex128s(b[:96], f.One[:])
	jay.WriteComplex128s(b[96:192], f.Two[:])
	jay.WriteComplex128s(b[192:288], f.Three[:])
	jay.WriteComplex128s(b[288:], f.Four[:])
	return
}

func (f *Four) UnmarshalJ(b []byte) error {
	if len(b) != 384 {
		return jay.ErrUnexpectedEOB
	}
	f.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	f.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	f.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	f.Four = [6]complex128(jay.ReadComplex128s(b[288:], 6))
	return nil
}

func (f *Five) MarshalJ() (b []byte) {
	b = make([]byte, 480)
	jay.WriteComplex128s(b[:96], f.One[:])
	jay.WriteComplex128s(b[96:192], f.Two[:])
	jay.WriteComplex128s(b[192:288], f.Three[:])
	jay.WriteComplex128s(b[288:384], f.Four[:])
	jay.WriteComplex128s(b[384:], f.Five[:])
	return
}

func (f *Five) UnmarshalJ(b []byte) error {
	if len(b) != 480 {
		return jay.ErrUnexpectedEOB
	}
	f.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	f.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	f.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	f.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	f.Five = [6]complex128(jay.ReadComplex128s(b[384:], 6))
	return nil
}

func (s *Six) MarshalJ() (b []byte) {
	b = make([]byte, 576)
	jay.WriteComplex128s(b[:96], s.One[:])
	jay.WriteComplex128s(b[96:192], s.Two[:])
	jay.WriteComplex128s(b[192:288], s.Three[:])
	jay.WriteComplex128s(b[288:384], s.Four[:])
	jay.WriteComplex128s(b[384:480], s.Five[:])
	jay.WriteComplex128s(b[480:], s.Six[:])
	return
}

func (s *Six) UnmarshalJ(b []byte) error {
	if len(b) != 576 {
		return jay.ErrUnexpectedEOB
	}
	s.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	s.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	s.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	s.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	s.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	s.Six = [6]complex128(jay.ReadComplex128s(b[480:], 6))
	return nil
}

func (s *Seven) MarshalJ() (b []byte) {
	b = make([]byte, 672)
	jay.WriteComplex128s(b[:96], s.One[:])
	jay.WriteComplex128s(b[96:192], s.Two[:])
	jay.WriteComplex128s(b[192:288], s.Three[:])
	jay.WriteComplex128s(b[288:384], s.Four[:])
	jay.WriteComplex128s(b[384:480], s.Five[:])
	jay.WriteComplex128s(b[480:576], s.Six[:])
	jay.WriteComplex128s(b[576:], s.Seven[:])
	return
}

func (s *Seven) UnmarshalJ(b []byte) error {
	if len(b) != 672 {
		return jay.ErrUnexpectedEOB
	}
	s.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	s.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	s.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	s.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	s.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	s.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	s.Seven = [6]complex128(jay.ReadComplex128s(b[576:], 6))
	return nil
}

func (e *Eight) MarshalJ() (b []byte) {
	b = make([]byte, 768)
	jay.WriteComplex128s(b[:96], e.One[:])
	jay.WriteComplex128s(b[96:192], e.Two[:])
	jay.WriteComplex128s(b[192:288], e.Three[:])
	jay.WriteComplex128s(b[288:384], e.Four[:])
	jay.WriteComplex128s(b[384:480], e.Five[:])
	jay.WriteComplex128s(b[480:576], e.Six[:])
	jay.WriteComplex128s(b[576:672], e.Seven[:])
	jay.WriteComplex128s(b[672:], e.Eight[:])
	return
}

func (e *Eight) UnmarshalJ(b []byte) error {
	if len(b) != 768 {
		return jay.ErrUnexpectedEOB
	}
	e.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	e.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	e.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	e.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	e.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	e.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	e.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	e.Eight = [6]complex128(jay.ReadComplex128s(b[672:], 6))
	return nil
}

func (n *Nine) MarshalJ() (b []byte) {
	b = make([]byte, 864)
	jay.WriteComplex128s(b[:96], n.One[:])
	jay.WriteComplex128s(b[96:192], n.Two[:])
	jay.WriteComplex128s(b[192:288], n.Three[:])
	jay.WriteComplex128s(b[288:384], n.Four[:])
	jay.WriteComplex128s(b[384:480], n.Five[:])
	jay.WriteComplex128s(b[480:576], n.Six[:])
	jay.WriteComplex128s(b[576:672], n.Seven[:])
	jay.WriteComplex128s(b[672:768], n.Eight[:])
	jay.WriteComplex128s(b[768:], n.Nine[:])
	return
}

func (n *Nine) UnmarshalJ(b []byte) error {
	if len(b) != 864 {
		return jay.ErrUnexpectedEOB
	}
	n.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	n.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	n.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	n.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	n.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	n.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	n.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	n.Eight = [6]complex128(jay.ReadComplex128s(b[672:768], 6))
	n.Nine = [6]complex128(jay.ReadComplex128s(b[768:], 6))
	return nil
}

func (t *Ten) MarshalJ() (b []byte) {
	b = make([]byte, 960)
	jay.WriteComplex128s(b[:96], t.One[:])
	jay.WriteComplex128s(b[96:192], t.Two[:])
	jay.WriteComplex128s(b[192:288], t.Three[:])
	jay.WriteComplex128s(b[288:384], t.Four[:])
	jay.WriteComplex128s(b[384:480], t.Five[:])
	jay.WriteComplex128s(b[480:576], t.Six[:])
	jay.WriteComplex128s(b[576:672], t.Seven[:])
	jay.WriteComplex128s(b[672:768], t.Eight[:])
	jay.WriteComplex128s(b[768:864], t.Nine[:])
	jay.WriteComplex128s(b[864:], t.Ten[:])
	return
}

func (t *Ten) UnmarshalJ(b []byte) error {
	if len(b) != 960 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	t.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	t.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	t.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	t.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	t.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	t.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	t.Eight = [6]complex128(jay.ReadComplex128s(b[672:768], 6))
	t.Nine = [6]complex128(jay.ReadComplex128s(b[768:864], 6))
	t.Ten = [6]complex128(jay.ReadComplex128s(b[864:], 6))
	return nil
}

func (e *Eleven) MarshalJ() (b []byte) {
	b = make([]byte, 1056)
	jay.WriteComplex128s(b[:96], e.One[:])
	jay.WriteComplex128s(b[96:192], e.Two[:])
	jay.WriteComplex128s(b[192:288], e.Three[:])
	jay.WriteComplex128s(b[288:384], e.Four[:])
	jay.WriteComplex128s(b[384:480], e.Five[:])
	jay.WriteComplex128s(b[480:576], e.Six[:])
	jay.WriteComplex128s(b[576:672], e.Seven[:])
	jay.WriteComplex128s(b[672:768], e.Eight[:])
	jay.WriteComplex128s(b[768:864], e.Nine[:])
	jay.WriteComplex128s(b[864:960], e.Ten[:])
	jay.WriteComplex128s(b[960:], e.Eleven[:])
	return
}

func (e *Eleven) UnmarshalJ(b []byte) error {
	if len(b) != 1056 {
		return jay.ErrUnexpectedEOB
	}
	e.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	e.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	e.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	e.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	e.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	e.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	e.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	e.Eight = [6]complex128(jay.ReadComplex128s(b[672:768], 6))
	e.Nine = [6]complex128(jay.ReadComplex128s(b[768:864], 6))
	e.Ten = [6]complex128(jay.ReadComplex128s(b[864:960], 6))
	e.Eleven = [6]complex128(jay.ReadComplex128s(b[960:], 6))
	return nil
}

func (t *Twelve) MarshalJ() (b []byte) {
	b = make([]byte, 1152)
	jay.WriteComplex128s(b[:96], t.One[:])
	jay.WriteComplex128s(b[96:192], t.Two[:])
	jay.WriteComplex128s(b[192:288], t.Three[:])
	jay.WriteComplex128s(b[288:384], t.Four[:])
	jay.WriteComplex128s(b[384:480], t.Five[:])
	jay.WriteComplex128s(b[480:576], t.Six[:])
	jay.WriteComplex128s(b[576:672], t.Seven[:])
	jay.WriteComplex128s(b[672:768], t.Eight[:])
	jay.WriteComplex128s(b[768:864], t.Nine[:])
	jay.WriteComplex128s(b[864:960], t.Ten[:])
	jay.WriteComplex128s(b[960:1056], t.Eleven[:])
	jay.WriteComplex128s(b[1056:], t.Twelve[:])
	return
}

func (t *Twelve) UnmarshalJ(b []byte) error {
	if len(b) != 1152 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	t.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	t.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	t.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	t.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	t.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	t.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	t.Eight = [6]complex128(jay.ReadComplex128s(b[672:768], 6))
	t.Nine = [6]complex128(jay.ReadComplex128s(b[768:864], 6))
	t.Ten = [6]complex128(jay.ReadComplex128s(b[864:960], 6))
	t.Eleven = [6]complex128(jay.ReadComplex128s(b[960:1056], 6))
	t.Twelve = [6]complex128(jay.ReadComplex128s(b[1056:], 6))
	return nil
}

func (t *Thirteen) MarshalJ() (b []byte) {
	b = make([]byte, 1248)
	jay.WriteComplex128s(b[:96], t.One[:])
	jay.WriteComplex128s(b[96:192], t.Two[:])
	jay.WriteComplex128s(b[192:288], t.Three[:])
	jay.WriteComplex128s(b[288:384], t.Four[:])
	jay.WriteComplex128s(b[384:480], t.Five[:])
	jay.WriteComplex128s(b[480:576], t.Six[:])
	jay.WriteComplex128s(b[576:672], t.Seven[:])
	jay.WriteComplex128s(b[672:768], t.Eight[:])
	jay.WriteComplex128s(b[768:864], t.Nine[:])
	jay.WriteComplex128s(b[864:960], t.Ten[:])
	jay.WriteComplex128s(b[960:1056], t.Eleven[:])
	jay.WriteComplex128s(b[1056:1152], t.Twelve[:])
	jay.WriteComplex128s(b[1152:], t.Thirteen[:])
	return
}

func (t *Thirteen) UnmarshalJ(b []byte) error {
	if len(b) != 1248 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	t.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	t.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	t.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	t.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	t.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	t.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	t.Eight = [6]complex128(jay.ReadComplex128s(b[672:768], 6))
	t.Nine = [6]complex128(jay.ReadComplex128s(b[768:864], 6))
	t.Ten = [6]complex128(jay.ReadComplex128s(b[864:960], 6))
	t.Eleven = [6]complex128(jay.ReadComplex128s(b[960:1056], 6))
	t.Twelve = [6]complex128(jay.ReadComplex128s(b[1056:1152], 6))
	t.Thirteen = [6]complex128(jay.ReadComplex128s(b[1152:], 6))
	return nil
}

func (f *Fourteen) MarshalJ() (b []byte) {
	b = make([]byte, 1344)
	jay.WriteComplex128s(b[:96], f.One[:])
	jay.WriteComplex128s(b[96:192], f.Two[:])
	jay.WriteComplex128s(b[192:288], f.Three[:])
	jay.WriteComplex128s(b[288:384], f.Four[:])
	jay.WriteComplex128s(b[384:480], f.Five[:])
	jay.WriteComplex128s(b[480:576], f.Six[:])
	jay.WriteComplex128s(b[576:672], f.Seven[:])
	jay.WriteComplex128s(b[672:768], f.Eight[:])
	jay.WriteComplex128s(b[768:864], f.Nine[:])
	jay.WriteComplex128s(b[864:960], f.Ten[:])
	jay.WriteComplex128s(b[960:1056], f.Eleven[:])
	jay.WriteComplex128s(b[1056:1152], f.Twelve[:])
	jay.WriteComplex128s(b[1152:1248], f.Thirteen[:])
	jay.WriteComplex128s(b[1248:], f.Fourteen[:])
	return
}

func (f *Fourteen) UnmarshalJ(b []byte) error {
	if len(b) != 1344 {
		return jay.ErrUnexpectedEOB
	}
	f.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	f.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	f.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	f.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	f.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	f.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	f.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	f.Eight = [6]complex128(jay.ReadComplex128s(b[672:768], 6))
	f.Nine = [6]complex128(jay.ReadComplex128s(b[768:864], 6))
	f.Ten = [6]complex128(jay.ReadComplex128s(b[864:960], 6))
	f.Eleven = [6]complex128(jay.ReadComplex128s(b[960:1056], 6))
	f.Twelve = [6]complex128(jay.ReadComplex128s(b[1056:1152], 6))
	f.Thirteen = [6]complex128(jay.ReadComplex128s(b[1152:1248], 6))
	f.Fourteen = [6]complex128(jay.ReadComplex128s(b[1248:], 6))
	return nil
}

func (f *Fifteen) MarshalJ() (b []byte) {
	b = make([]byte, 1440)
	jay.WriteComplex128s(b[:96], f.One[:])
	jay.WriteComplex128s(b[96:192], f.Two[:])
	jay.WriteComplex128s(b[192:288], f.Three[:])
	jay.WriteComplex128s(b[288:384], f.Four[:])
	jay.WriteComplex128s(b[384:480], f.Five[:])
	jay.WriteComplex128s(b[480:576], f.Six[:])
	jay.WriteComplex128s(b[576:672], f.Seven[:])
	jay.WriteComplex128s(b[672:768], f.Eight[:])
	jay.WriteComplex128s(b[768:864], f.Nine[:])
	jay.WriteComplex128s(b[864:960], f.Ten[:])
	jay.WriteComplex128s(b[960:1056], f.Eleven[:])
	jay.WriteComplex128s(b[1056:1152], f.Twelve[:])
	jay.WriteComplex128s(b[1152:1248], f.Thirteen[:])
	jay.WriteComplex128s(b[1248:1344], f.Fourteen[:])
	jay.WriteComplex128s(b[1344:], f.Fifteen[:])
	return
}

func (f *Fifteen) UnmarshalJ(b []byte) error {
	if len(b) != 1440 {
		return jay.ErrUnexpectedEOB
	}
	f.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	f.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	f.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	f.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	f.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	f.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	f.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	f.Eight = [6]complex128(jay.ReadComplex128s(b[672:768], 6))
	f.Nine = [6]complex128(jay.ReadComplex128s(b[768:864], 6))
	f.Ten = [6]complex128(jay.ReadComplex128s(b[864:960], 6))
	f.Eleven = [6]complex128(jay.ReadComplex128s(b[960:1056], 6))
	f.Twelve = [6]complex128(jay.ReadComplex128s(b[1056:1152], 6))
	f.Thirteen = [6]complex128(jay.ReadComplex128s(b[1152:1248], 6))
	f.Fourteen = [6]complex128(jay.ReadComplex128s(b[1248:1344], 6))
	f.Fifteen = [6]complex128(jay.ReadComplex128s(b[1344:], 6))
	return nil
}

func (s *Sixteen) MarshalJ() (b []byte) {
	b = make([]byte, 1536)
	jay.WriteComplex128s(b[:96], s.One[:])
	jay.WriteComplex128s(b[96:192], s.Two[:])
	jay.WriteComplex128s(b[192:288], s.Three[:])
	jay.WriteComplex128s(b[288:384], s.Four[:])
	jay.WriteComplex128s(b[384:480], s.Five[:])
	jay.WriteComplex128s(b[480:576], s.Six[:])
	jay.WriteComplex128s(b[576:672], s.Seven[:])
	jay.WriteComplex128s(b[672:768], s.Eight[:])
	jay.WriteComplex128s(b[768:864], s.Nine[:])
	jay.WriteComplex128s(b[864:960], s.Ten[:])
	jay.WriteComplex128s(b[960:1056], s.Eleven[:])
	jay.WriteComplex128s(b[1056:1152], s.Twelve[:])
	jay.WriteComplex128s(b[1152:1248], s.Thirteen[:])
	jay.WriteComplex128s(b[1248:1344], s.Fourteen[:])
	jay.WriteComplex128s(b[1344:1440], s.Fifteen[:])
	jay.WriteComplex128s(b[1440:], s.Sixteen[:])
	return
}

func (s *Sixteen) UnmarshalJ(b []byte) error {
	if len(b) != 1536 {
		return jay.ErrUnexpectedEOB
	}
	s.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	s.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	s.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	s.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	s.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	s.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	s.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	s.Eight = [6]complex128(jay.ReadComplex128s(b[672:768], 6))
	s.Nine = [6]complex128(jay.ReadComplex128s(b[768:864], 6))
	s.Ten = [6]complex128(jay.ReadComplex128s(b[864:960], 6))
	s.Eleven = [6]complex128(jay.ReadComplex128s(b[960:1056], 6))
	s.Twelve = [6]complex128(jay.ReadComplex128s(b[1056:1152], 6))
	s.Thirteen = [6]complex128(jay.ReadComplex128s(b[1152:1248], 6))
	s.Fourteen = [6]complex128(jay.ReadComplex128s(b[1248:1344], 6))
	s.Fifteen = [6]complex128(jay.ReadComplex128s(b[1344:1440], 6))
	s.Sixteen = [6]complex128(jay.ReadComplex128s(b[1440:], 6))
	return nil
}

func (s *Seventeen) MarshalJ() (b []byte) {
	b = make([]byte, 1632)
	jay.WriteComplex128s(b[:96], s.One[:])
	jay.WriteComplex128s(b[96:192], s.Two[:])
	jay.WriteComplex128s(b[192:288], s.Three[:])
	jay.WriteComplex128s(b[288:384], s.Four[:])
	jay.WriteComplex128s(b[384:480], s.Five[:])
	jay.WriteComplex128s(b[480:576], s.Six[:])
	jay.WriteComplex128s(b[576:672], s.Seven[:])
	jay.WriteComplex128s(b[672:768], s.Eight[:])
	jay.WriteComplex128s(b[768:864], s.Nine[:])
	jay.WriteComplex128s(b[864:960], s.Ten[:])
	jay.WriteComplex128s(b[960:1056], s.Eleven[:])
	jay.WriteComplex128s(b[1056:1152], s.Twelve[:])
	jay.WriteComplex128s(b[1152:1248], s.Thirteen[:])
	jay.WriteComplex128s(b[1248:1344], s.Fourteen[:])
	jay.WriteComplex128s(b[1344:1440], s.Fifteen[:])
	jay.WriteComplex128s(b[1440:1536], s.Sixteen[:])
	jay.WriteComplex128s(b[1536:], s.Seventeen[:])
	return
}

func (s *Seventeen) UnmarshalJ(b []byte) error {
	if len(b) != 1632 {
		return jay.ErrUnexpectedEOB
	}
	s.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	s.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	s.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	s.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	s.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	s.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	s.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	s.Eight = [6]complex128(jay.ReadComplex128s(b[672:768], 6))
	s.Nine = [6]complex128(jay.ReadComplex128s(b[768:864], 6))
	s.Ten = [6]complex128(jay.ReadComplex128s(b[864:960], 6))
	s.Eleven = [6]complex128(jay.ReadComplex128s(b[960:1056], 6))
	s.Twelve = [6]complex128(jay.ReadComplex128s(b[1056:1152], 6))
	s.Thirteen = [6]complex128(jay.ReadComplex128s(b[1152:1248], 6))
	s.Fourteen = [6]complex128(jay.ReadComplex128s(b[1248:1344], 6))
	s.Fifteen = [6]complex128(jay.ReadComplex128s(b[1344:1440], 6))
	s.Sixteen = [6]complex128(jay.ReadComplex128s(b[1440:1536], 6))
	s.Seventeen = [6]complex128(jay.ReadComplex128s(b[1536:], 6))
	return nil
}

func (e *Eighteen) MarshalJ() (b []byte) {
	b = make([]byte, 1728)
	jay.WriteComplex128s(b[:96], e.One[:])
	jay.WriteComplex128s(b[96:192], e.Two[:])
	jay.WriteComplex128s(b[192:288], e.Three[:])
	jay.WriteComplex128s(b[288:384], e.Four[:])
	jay.WriteComplex128s(b[384:480], e.Five[:])
	jay.WriteComplex128s(b[480:576], e.Six[:])
	jay.WriteComplex128s(b[576:672], e.Seven[:])
	jay.WriteComplex128s(b[672:768], e.Eight[:])
	jay.WriteComplex128s(b[768:864], e.Nine[:])
	jay.WriteComplex128s(b[864:960], e.Ten[:])
	jay.WriteComplex128s(b[960:1056], e.Eleven[:])
	jay.WriteComplex128s(b[1056:1152], e.Twelve[:])
	jay.WriteComplex128s(b[1152:1248], e.Thirteen[:])
	jay.WriteComplex128s(b[1248:1344], e.Fourteen[:])
	jay.WriteComplex128s(b[1344:1440], e.Fifteen[:])
	jay.WriteComplex128s(b[1440:1536], e.Sixteen[:])
	jay.WriteComplex128s(b[1536:1632], e.Seventeen[:])
	jay.WriteComplex128s(b[1632:], e.Eighteen[:])
	return
}

func (e *Eighteen) UnmarshalJ(b []byte) error {
	if len(b) != 1728 {
		return jay.ErrUnexpectedEOB
	}
	e.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	e.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	e.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	e.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	e.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	e.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	e.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	e.Eight = [6]complex128(jay.ReadComplex128s(b[672:768], 6))
	e.Nine = [6]complex128(jay.ReadComplex128s(b[768:864], 6))
	e.Ten = [6]complex128(jay.ReadComplex128s(b[864:960], 6))
	e.Eleven = [6]complex128(jay.ReadComplex128s(b[960:1056], 6))
	e.Twelve = [6]complex128(jay.ReadComplex128s(b[1056:1152], 6))
	e.Thirteen = [6]complex128(jay.ReadComplex128s(b[1152:1248], 6))
	e.Fourteen = [6]complex128(jay.ReadComplex128s(b[1248:1344], 6))
	e.Fifteen = [6]complex128(jay.ReadComplex128s(b[1344:1440], 6))
	e.Sixteen = [6]complex128(jay.ReadComplex128s(b[1440:1536], 6))
	e.Seventeen = [6]complex128(jay.ReadComplex128s(b[1536:1632], 6))
	e.Eighteen = [6]complex128(jay.ReadComplex128s(b[1632:], 6))
	return nil
}

func (n *Nineteen) MarshalJ() (b []byte) {
	b = make([]byte, 1824)
	jay.WriteComplex128s(b[:96], n.One[:])
	jay.WriteComplex128s(b[96:192], n.Two[:])
	jay.WriteComplex128s(b[192:288], n.Three[:])
	jay.WriteComplex128s(b[288:384], n.Four[:])
	jay.WriteComplex128s(b[384:480], n.Five[:])
	jay.WriteComplex128s(b[480:576], n.Six[:])
	jay.WriteComplex128s(b[576:672], n.Seven[:])
	jay.WriteComplex128s(b[672:768], n.Eight[:])
	jay.WriteComplex128s(b[768:864], n.Nine[:])
	jay.WriteComplex128s(b[864:960], n.Ten[:])
	jay.WriteComplex128s(b[960:1056], n.Eleven[:])
	jay.WriteComplex128s(b[1056:1152], n.Twelve[:])
	jay.WriteComplex128s(b[1152:1248], n.Thirteen[:])
	jay.WriteComplex128s(b[1248:1344], n.Fourteen[:])
	jay.WriteComplex128s(b[1344:1440], n.Fifteen[:])
	jay.WriteComplex128s(b[1440:1536], n.Sixteen[:])
	jay.WriteComplex128s(b[1536:1632], n.Seventeen[:])
	jay.WriteComplex128s(b[1632:1728], n.Eighteen[:])
	jay.WriteComplex128s(b[1728:], n.Nineteen[:])
	return
}

func (n *Nineteen) UnmarshalJ(b []byte) error {
	if len(b) != 1824 {
		return jay.ErrUnexpectedEOB
	}
	n.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	n.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	n.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	n.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	n.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	n.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	n.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	n.Eight = [6]complex128(jay.ReadComplex128s(b[672:768], 6))
	n.Nine = [6]complex128(jay.ReadComplex128s(b[768:864], 6))
	n.Ten = [6]complex128(jay.ReadComplex128s(b[864:960], 6))
	n.Eleven = [6]complex128(jay.ReadComplex128s(b[960:1056], 6))
	n.Twelve = [6]complex128(jay.ReadComplex128s(b[1056:1152], 6))
	n.Thirteen = [6]complex128(jay.ReadComplex128s(b[1152:1248], 6))
	n.Fourteen = [6]complex128(jay.ReadComplex128s(b[1248:1344], 6))
	n.Fifteen = [6]complex128(jay.ReadComplex128s(b[1344:1440], 6))
	n.Sixteen = [6]complex128(jay.ReadComplex128s(b[1440:1536], 6))
	n.Seventeen = [6]complex128(jay.ReadComplex128s(b[1536:1632], 6))
	n.Eighteen = [6]complex128(jay.ReadComplex128s(b[1632:1728], 6))
	n.Nineteen = [6]complex128(jay.ReadComplex128s(b[1728:], 6))
	return nil
}

func (t *Twenty) MarshalJ() (b []byte) {
	b = make([]byte, 1920)
	jay.WriteComplex128s(b[:96], t.One[:])
	jay.WriteComplex128s(b[96:192], t.Two[:])
	jay.WriteComplex128s(b[192:288], t.Three[:])
	jay.WriteComplex128s(b[288:384], t.Four[:])
	jay.WriteComplex128s(b[384:480], t.Five[:])
	jay.WriteComplex128s(b[480:576], t.Six[:])
	jay.WriteComplex128s(b[576:672], t.Seven[:])
	jay.WriteComplex128s(b[672:768], t.Eight[:])
	jay.WriteComplex128s(b[768:864], t.Nine[:])
	jay.WriteComplex128s(b[864:960], t.Ten[:])
	jay.WriteComplex128s(b[960:1056], t.Eleven[:])
	jay.WriteComplex128s(b[1056:1152], t.Twelve[:])
	jay.WriteComplex128s(b[1152:1248], t.Thirteen[:])
	jay.WriteComplex128s(b[1248:1344], t.Fourteen[:])
	jay.WriteComplex128s(b[1344:1440], t.Fifteen[:])
	jay.WriteComplex128s(b[1440:1536], t.Sixteen[:])
	jay.WriteComplex128s(b[1536:1632], t.Seventeen[:])
	jay.WriteComplex128s(b[1632:1728], t.Eighteen[:])
	jay.WriteComplex128s(b[1728:1824], t.Nineteen[:])
	jay.WriteComplex128s(b[1824:], t.Twenty[:])
	return
}

func (t *Twenty) UnmarshalJ(b []byte) error {
	if len(b) != 1920 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	t.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	t.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	t.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	t.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	t.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	t.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	t.Eight = [6]complex128(jay.ReadComplex128s(b[672:768], 6))
	t.Nine = [6]complex128(jay.ReadComplex128s(b[768:864], 6))
	t.Ten = [6]complex128(jay.ReadComplex128s(b[864:960], 6))
	t.Eleven = [6]complex128(jay.ReadComplex128s(b[960:1056], 6))
	t.Twelve = [6]complex128(jay.ReadComplex128s(b[1056:1152], 6))
	t.Thirteen = [6]complex128(jay.ReadComplex128s(b[1152:1248], 6))
	t.Fourteen = [6]complex128(jay.ReadComplex128s(b[1248:1344], 6))
	t.Fifteen = [6]complex128(jay.ReadComplex128s(b[1344:1440], 6))
	t.Sixteen = [6]complex128(jay.ReadComplex128s(b[1440:1536], 6))
	t.Seventeen = [6]complex128(jay.ReadComplex128s(b[1536:1632], 6))
	t.Eighteen = [6]complex128(jay.ReadComplex128s(b[1632:1728], 6))
	t.Nineteen = [6]complex128(jay.ReadComplex128s(b[1728:1824], 6))
	t.Twenty = [6]complex128(jay.ReadComplex128s(b[1824:], 6))
	return nil
}

func (t *TwentyOne) MarshalJ() (b []byte) {
	b = make([]byte, 2016)
	jay.WriteComplex128s(b[:96], t.One[:])
	jay.WriteComplex128s(b[96:192], t.Two[:])
	jay.WriteComplex128s(b[192:288], t.Three[:])
	jay.WriteComplex128s(b[288:384], t.Four[:])
	jay.WriteComplex128s(b[384:480], t.Five[:])
	jay.WriteComplex128s(b[480:576], t.Six[:])
	jay.WriteComplex128s(b[576:672], t.Seven[:])
	jay.WriteComplex128s(b[672:768], t.Eight[:])
	jay.WriteComplex128s(b[768:864], t.Nine[:])
	jay.WriteComplex128s(b[864:960], t.Ten[:])
	jay.WriteComplex128s(b[960:1056], t.Eleven[:])
	jay.WriteComplex128s(b[1056:1152], t.Twelve[:])
	jay.WriteComplex128s(b[1152:1248], t.Thirteen[:])
	jay.WriteComplex128s(b[1248:1344], t.Fourteen[:])
	jay.WriteComplex128s(b[1344:1440], t.Fifteen[:])
	jay.WriteComplex128s(b[1440:1536], t.Sixteen[:])
	jay.WriteComplex128s(b[1536:1632], t.Seventeen[:])
	jay.WriteComplex128s(b[1632:1728], t.Eighteen[:])
	jay.WriteComplex128s(b[1728:1824], t.Nineteen[:])
	jay.WriteComplex128s(b[1824:1920], t.Twenty[:])
	jay.WriteComplex128s(b[1920:], t.TwentyOne[:])
	return
}

func (t *TwentyOne) UnmarshalJ(b []byte) error {
	if len(b) != 2016 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	t.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	t.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	t.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	t.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	t.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	t.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	t.Eight = [6]complex128(jay.ReadComplex128s(b[672:768], 6))
	t.Nine = [6]complex128(jay.ReadComplex128s(b[768:864], 6))
	t.Ten = [6]complex128(jay.ReadComplex128s(b[864:960], 6))
	t.Eleven = [6]complex128(jay.ReadComplex128s(b[960:1056], 6))
	t.Twelve = [6]complex128(jay.ReadComplex128s(b[1056:1152], 6))
	t.Thirteen = [6]complex128(jay.ReadComplex128s(b[1152:1248], 6))
	t.Fourteen = [6]complex128(jay.ReadComplex128s(b[1248:1344], 6))
	t.Fifteen = [6]complex128(jay.ReadComplex128s(b[1344:1440], 6))
	t.Sixteen = [6]complex128(jay.ReadComplex128s(b[1440:1536], 6))
	t.Seventeen = [6]complex128(jay.ReadComplex128s(b[1536:1632], 6))
	t.Eighteen = [6]complex128(jay.ReadComplex128s(b[1632:1728], 6))
	t.Nineteen = [6]complex128(jay.ReadComplex128s(b[1728:1824], 6))
	t.Twenty = [6]complex128(jay.ReadComplex128s(b[1824:1920], 6))
	t.TwentyOne = [6]complex128(jay.ReadComplex128s(b[1920:], 6))
	return nil
}

func (t *TwentyTwo) MarshalJ() (b []byte) {
	b = make([]byte, 2112)
	jay.WriteComplex128s(b[:96], t.One[:])
	jay.WriteComplex128s(b[96:192], t.Two[:])
	jay.WriteComplex128s(b[192:288], t.Three[:])
	jay.WriteComplex128s(b[288:384], t.Four[:])
	jay.WriteComplex128s(b[384:480], t.Five[:])
	jay.WriteComplex128s(b[480:576], t.Six[:])
	jay.WriteComplex128s(b[576:672], t.Seven[:])
	jay.WriteComplex128s(b[672:768], t.Eight[:])
	jay.WriteComplex128s(b[768:864], t.Nine[:])
	jay.WriteComplex128s(b[864:960], t.Ten[:])
	jay.WriteComplex128s(b[960:1056], t.Eleven[:])
	jay.WriteComplex128s(b[1056:1152], t.Twelve[:])
	jay.WriteComplex128s(b[1152:1248], t.Thirteen[:])
	jay.WriteComplex128s(b[1248:1344], t.Fourteen[:])
	jay.WriteComplex128s(b[1344:1440], t.Fifteen[:])
	jay.WriteComplex128s(b[1440:1536], t.Sixteen[:])
	jay.WriteComplex128s(b[1536:1632], t.Seventeen[:])
	jay.WriteComplex128s(b[1632:1728], t.Eighteen[:])
	jay.WriteComplex128s(b[1728:1824], t.Nineteen[:])
	jay.WriteComplex128s(b[1824:1920], t.Twenty[:])
	jay.WriteComplex128s(b[1920:2016], t.TwentyOne[:])
	jay.WriteComplex128s(b[2016:], t.TwentyTwo[:])
	return
}

func (t *TwentyTwo) UnmarshalJ(b []byte) error {
	if len(b) != 2112 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	t.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	t.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	t.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	t.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	t.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	t.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	t.Eight = [6]complex128(jay.ReadComplex128s(b[672:768], 6))
	t.Nine = [6]complex128(jay.ReadComplex128s(b[768:864], 6))
	t.Ten = [6]complex128(jay.ReadComplex128s(b[864:960], 6))
	t.Eleven = [6]complex128(jay.ReadComplex128s(b[960:1056], 6))
	t.Twelve = [6]complex128(jay.ReadComplex128s(b[1056:1152], 6))
	t.Thirteen = [6]complex128(jay.ReadComplex128s(b[1152:1248], 6))
	t.Fourteen = [6]complex128(jay.ReadComplex128s(b[1248:1344], 6))
	t.Fifteen = [6]complex128(jay.ReadComplex128s(b[1344:1440], 6))
	t.Sixteen = [6]complex128(jay.ReadComplex128s(b[1440:1536], 6))
	t.Seventeen = [6]complex128(jay.ReadComplex128s(b[1536:1632], 6))
	t.Eighteen = [6]complex128(jay.ReadComplex128s(b[1632:1728], 6))
	t.Nineteen = [6]complex128(jay.ReadComplex128s(b[1728:1824], 6))
	t.Twenty = [6]complex128(jay.ReadComplex128s(b[1824:1920], 6))
	t.TwentyOne = [6]complex128(jay.ReadComplex128s(b[1920:2016], 6))
	t.TwentyTwo = [6]complex128(jay.ReadComplex128s(b[2016:], 6))
	return nil
}

func (t *TwentyThree) MarshalJ() (b []byte) {
	b = make([]byte, 2208)
	jay.WriteComplex128s(b[:96], t.One[:])
	jay.WriteComplex128s(b[96:192], t.Two[:])
	jay.WriteComplex128s(b[192:288], t.Three[:])
	jay.WriteComplex128s(b[288:384], t.Four[:])
	jay.WriteComplex128s(b[384:480], t.Five[:])
	jay.WriteComplex128s(b[480:576], t.Six[:])
	jay.WriteComplex128s(b[576:672], t.Seven[:])
	jay.WriteComplex128s(b[672:768], t.Eight[:])
	jay.WriteComplex128s(b[768:864], t.Nine[:])
	jay.WriteComplex128s(b[864:960], t.Ten[:])
	jay.WriteComplex128s(b[960:1056], t.Eleven[:])
	jay.WriteComplex128s(b[1056:1152], t.Twelve[:])
	jay.WriteComplex128s(b[1152:1248], t.Thirteen[:])
	jay.WriteComplex128s(b[1248:1344], t.Fourteen[:])
	jay.WriteComplex128s(b[1344:1440], t.Fifteen[:])
	jay.WriteComplex128s(b[1440:1536], t.Sixteen[:])
	jay.WriteComplex128s(b[1536:1632], t.Seventeen[:])
	jay.WriteComplex128s(b[1632:1728], t.Eighteen[:])
	jay.WriteComplex128s(b[1728:1824], t.Nineteen[:])
	jay.WriteComplex128s(b[1824:1920], t.Twenty[:])
	jay.WriteComplex128s(b[1920:2016], t.TwentyOne[:])
	jay.WriteComplex128s(b[2016:2112], t.TwentyTwo[:])
	jay.WriteComplex128s(b[2112:], t.TwentyThree[:])
	return
}

func (t *TwentyThree) UnmarshalJ(b []byte) error {
	if len(b) != 2208 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [6]complex128(jay.ReadComplex128s(b[:96], 6))
	t.Two = [6]complex128(jay.ReadComplex128s(b[96:192], 6))
	t.Three = [6]complex128(jay.ReadComplex128s(b[192:288], 6))
	t.Four = [6]complex128(jay.ReadComplex128s(b[288:384], 6))
	t.Five = [6]complex128(jay.ReadComplex128s(b[384:480], 6))
	t.Six = [6]complex128(jay.ReadComplex128s(b[480:576], 6))
	t.Seven = [6]complex128(jay.ReadComplex128s(b[576:672], 6))
	t.Eight = [6]complex128(jay.ReadComplex128s(b[672:768], 6))
	t.Nine = [6]complex128(jay.ReadComplex128s(b[768:864], 6))
	t.Ten = [6]complex128(jay.ReadComplex128s(b[864:960], 6))
	t.Eleven = [6]complex128(jay.ReadComplex128s(b[960:1056], 6))
	t.Twelve = [6]complex128(jay.ReadComplex128s(b[1056:1152], 6))
	t.Thirteen = [6]complex128(jay.ReadComplex128s(b[1152:1248], 6))
	t.Fourteen = [6]complex128(jay.ReadComplex128s(b[1248:1344], 6))
	t.Fifteen = [6]complex128(jay.ReadComplex128s(b[1344:1440], 6))
	t.Sixteen = [6]complex128(jay.ReadComplex128s(b[1440:1536], 6))
	t.Seventeen = [6]complex128(jay.ReadComplex128s(b[1536:1632], 6))
	t.Eighteen = [6]complex128(jay.ReadComplex128s(b[1632:1728], 6))
	t.Nineteen = [6]complex128(jay.ReadComplex128s(b[1728:1824], 6))
	t.Twenty = [6]complex128(jay.ReadComplex128s(b[1824:1920], 6))
	t.TwentyOne = [6]complex128(jay.ReadComplex128s(b[1920:2016], 6))
	t.TwentyTwo = [6]complex128(jay.ReadComplex128s(b[2016:2112], 6))
	t.TwentyThree = [6]complex128(jay.ReadComplex128s(b[2112:], 6))
	return nil
}
