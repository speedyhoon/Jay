// Code generated by Jay; DO NOT EDIT. Tool documentation available at: https://github.com/speedyhoon/jay

package main

import (
	"time"

	"github.com/speedyhoon/jay"
)

func (o *One) MarshalJ() (b []byte) {
	b = make([]byte, 72)
	jay.WriteTimes(b, o.One[:])
	return
}

func (o *One) UnmarshalJ(b []byte) error {
	if len(b) != 72 {
		return jay.ErrUnexpectedEOB
	}
	o.One = [9]time.Time(jay.ReadTimes(b, 9))
	return nil
}

func (t *Two) MarshalJ() (b []byte) {
	b = make([]byte, 144)
	jay.WriteTimes(b[:72], t.One[:])
	jay.WriteTimes(b[72:], t.Two[:])
	return
}

func (t *Two) UnmarshalJ(b []byte) error {
	if len(b) != 144 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	t.Two = [9]time.Time(jay.ReadTimes(b[72:], 9))
	return nil
}

func (t *Three) MarshalJ() (b []byte) {
	b = make([]byte, 216)
	jay.WriteTimes(b[:72], t.One[:])
	jay.WriteTimes(b[72:144], t.Two[:])
	jay.WriteTimes(b[144:], t.Three[:])
	return
}

func (t *Three) UnmarshalJ(b []byte) error {
	if len(b) != 216 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	t.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	t.Three = [9]time.Time(jay.ReadTimes(b[144:], 9))
	return nil
}

func (f *Four) MarshalJ() (b []byte) {
	b = make([]byte, 288)
	jay.WriteTimes(b[:72], f.One[:])
	jay.WriteTimes(b[72:144], f.Two[:])
	jay.WriteTimes(b[144:216], f.Three[:])
	jay.WriteTimes(b[216:], f.Four[:])
	return
}

func (f *Four) UnmarshalJ(b []byte) error {
	if len(b) != 288 {
		return jay.ErrUnexpectedEOB
	}
	f.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	f.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	f.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	f.Four = [9]time.Time(jay.ReadTimes(b[216:], 9))
	return nil
}

func (f *Five) MarshalJ() (b []byte) {
	b = make([]byte, 360)
	jay.WriteTimes(b[:72], f.One[:])
	jay.WriteTimes(b[72:144], f.Two[:])
	jay.WriteTimes(b[144:216], f.Three[:])
	jay.WriteTimes(b[216:288], f.Four[:])
	jay.WriteTimes(b[288:], f.Five[:])
	return
}

func (f *Five) UnmarshalJ(b []byte) error {
	if len(b) != 360 {
		return jay.ErrUnexpectedEOB
	}
	f.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	f.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	f.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	f.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	f.Five = [9]time.Time(jay.ReadTimes(b[288:], 9))
	return nil
}

func (s *Six) MarshalJ() (b []byte) {
	b = make([]byte, 432)
	jay.WriteTimes(b[:72], s.One[:])
	jay.WriteTimes(b[72:144], s.Two[:])
	jay.WriteTimes(b[144:216], s.Three[:])
	jay.WriteTimes(b[216:288], s.Four[:])
	jay.WriteTimes(b[288:360], s.Five[:])
	jay.WriteTimes(b[360:], s.Six[:])
	return
}

func (s *Six) UnmarshalJ(b []byte) error {
	if len(b) != 432 {
		return jay.ErrUnexpectedEOB
	}
	s.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	s.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	s.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	s.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	s.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	s.Six = [9]time.Time(jay.ReadTimes(b[360:], 9))
	return nil
}

func (s *Seven) MarshalJ() (b []byte) {
	b = make([]byte, 504)
	jay.WriteTimes(b[:72], s.One[:])
	jay.WriteTimes(b[72:144], s.Two[:])
	jay.WriteTimes(b[144:216], s.Three[:])
	jay.WriteTimes(b[216:288], s.Four[:])
	jay.WriteTimes(b[288:360], s.Five[:])
	jay.WriteTimes(b[360:432], s.Six[:])
	jay.WriteTimes(b[432:], s.Seven[:])
	return
}

func (s *Seven) UnmarshalJ(b []byte) error {
	if len(b) != 504 {
		return jay.ErrUnexpectedEOB
	}
	s.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	s.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	s.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	s.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	s.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	s.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	s.Seven = [9]time.Time(jay.ReadTimes(b[432:], 9))
	return nil
}

func (e *Eight) MarshalJ() (b []byte) {
	b = make([]byte, 576)
	jay.WriteTimes(b[:72], e.One[:])
	jay.WriteTimes(b[72:144], e.Two[:])
	jay.WriteTimes(b[144:216], e.Three[:])
	jay.WriteTimes(b[216:288], e.Four[:])
	jay.WriteTimes(b[288:360], e.Five[:])
	jay.WriteTimes(b[360:432], e.Six[:])
	jay.WriteTimes(b[432:504], e.Seven[:])
	jay.WriteTimes(b[504:], e.Eight[:])
	return
}

func (e *Eight) UnmarshalJ(b []byte) error {
	if len(b) != 576 {
		return jay.ErrUnexpectedEOB
	}
	e.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	e.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	e.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	e.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	e.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	e.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	e.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	e.Eight = [9]time.Time(jay.ReadTimes(b[504:], 9))
	return nil
}

func (n *Nine) MarshalJ() (b []byte) {
	b = make([]byte, 648)
	jay.WriteTimes(b[:72], n.One[:])
	jay.WriteTimes(b[72:144], n.Two[:])
	jay.WriteTimes(b[144:216], n.Three[:])
	jay.WriteTimes(b[216:288], n.Four[:])
	jay.WriteTimes(b[288:360], n.Five[:])
	jay.WriteTimes(b[360:432], n.Six[:])
	jay.WriteTimes(b[432:504], n.Seven[:])
	jay.WriteTimes(b[504:576], n.Eight[:])
	jay.WriteTimes(b[576:], n.Nine[:])
	return
}

func (n *Nine) UnmarshalJ(b []byte) error {
	if len(b) != 648 {
		return jay.ErrUnexpectedEOB
	}
	n.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	n.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	n.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	n.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	n.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	n.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	n.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	n.Eight = [9]time.Time(jay.ReadTimes(b[504:576], 9))
	n.Nine = [9]time.Time(jay.ReadTimes(b[576:], 9))
	return nil
}

func (t *Ten) MarshalJ() (b []byte) {
	b = make([]byte, 720)
	jay.WriteTimes(b[:72], t.One[:])
	jay.WriteTimes(b[72:144], t.Two[:])
	jay.WriteTimes(b[144:216], t.Three[:])
	jay.WriteTimes(b[216:288], t.Four[:])
	jay.WriteTimes(b[288:360], t.Five[:])
	jay.WriteTimes(b[360:432], t.Six[:])
	jay.WriteTimes(b[432:504], t.Seven[:])
	jay.WriteTimes(b[504:576], t.Eight[:])
	jay.WriteTimes(b[576:648], t.Nine[:])
	jay.WriteTimes(b[648:], t.Ten[:])
	return
}

func (t *Ten) UnmarshalJ(b []byte) error {
	if len(b) != 720 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	t.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	t.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	t.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	t.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	t.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	t.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	t.Eight = [9]time.Time(jay.ReadTimes(b[504:576], 9))
	t.Nine = [9]time.Time(jay.ReadTimes(b[576:648], 9))
	t.Ten = [9]time.Time(jay.ReadTimes(b[648:], 9))
	return nil
}

func (e *Eleven) MarshalJ() (b []byte) {
	b = make([]byte, 792)
	jay.WriteTimes(b[:72], e.One[:])
	jay.WriteTimes(b[72:144], e.Two[:])
	jay.WriteTimes(b[144:216], e.Three[:])
	jay.WriteTimes(b[216:288], e.Four[:])
	jay.WriteTimes(b[288:360], e.Five[:])
	jay.WriteTimes(b[360:432], e.Six[:])
	jay.WriteTimes(b[432:504], e.Seven[:])
	jay.WriteTimes(b[504:576], e.Eight[:])
	jay.WriteTimes(b[576:648], e.Nine[:])
	jay.WriteTimes(b[648:720], e.Ten[:])
	jay.WriteTimes(b[720:], e.Eleven[:])
	return
}

func (e *Eleven) UnmarshalJ(b []byte) error {
	if len(b) != 792 {
		return jay.ErrUnexpectedEOB
	}
	e.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	e.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	e.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	e.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	e.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	e.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	e.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	e.Eight = [9]time.Time(jay.ReadTimes(b[504:576], 9))
	e.Nine = [9]time.Time(jay.ReadTimes(b[576:648], 9))
	e.Ten = [9]time.Time(jay.ReadTimes(b[648:720], 9))
	e.Eleven = [9]time.Time(jay.ReadTimes(b[720:], 9))
	return nil
}

func (t *Twelve) MarshalJ() (b []byte) {
	b = make([]byte, 864)
	jay.WriteTimes(b[:72], t.One[:])
	jay.WriteTimes(b[72:144], t.Two[:])
	jay.WriteTimes(b[144:216], t.Three[:])
	jay.WriteTimes(b[216:288], t.Four[:])
	jay.WriteTimes(b[288:360], t.Five[:])
	jay.WriteTimes(b[360:432], t.Six[:])
	jay.WriteTimes(b[432:504], t.Seven[:])
	jay.WriteTimes(b[504:576], t.Eight[:])
	jay.WriteTimes(b[576:648], t.Nine[:])
	jay.WriteTimes(b[648:720], t.Ten[:])
	jay.WriteTimes(b[720:792], t.Eleven[:])
	jay.WriteTimes(b[792:], t.Twelve[:])
	return
}

func (t *Twelve) UnmarshalJ(b []byte) error {
	if len(b) != 864 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	t.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	t.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	t.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	t.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	t.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	t.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	t.Eight = [9]time.Time(jay.ReadTimes(b[504:576], 9))
	t.Nine = [9]time.Time(jay.ReadTimes(b[576:648], 9))
	t.Ten = [9]time.Time(jay.ReadTimes(b[648:720], 9))
	t.Eleven = [9]time.Time(jay.ReadTimes(b[720:792], 9))
	t.Twelve = [9]time.Time(jay.ReadTimes(b[792:], 9))
	return nil
}

func (t *Thirteen) MarshalJ() (b []byte) {
	b = make([]byte, 936)
	jay.WriteTimes(b[:72], t.One[:])
	jay.WriteTimes(b[72:144], t.Two[:])
	jay.WriteTimes(b[144:216], t.Three[:])
	jay.WriteTimes(b[216:288], t.Four[:])
	jay.WriteTimes(b[288:360], t.Five[:])
	jay.WriteTimes(b[360:432], t.Six[:])
	jay.WriteTimes(b[432:504], t.Seven[:])
	jay.WriteTimes(b[504:576], t.Eight[:])
	jay.WriteTimes(b[576:648], t.Nine[:])
	jay.WriteTimes(b[648:720], t.Ten[:])
	jay.WriteTimes(b[720:792], t.Eleven[:])
	jay.WriteTimes(b[792:864], t.Twelve[:])
	jay.WriteTimes(b[864:], t.Thirteen[:])
	return
}

func (t *Thirteen) UnmarshalJ(b []byte) error {
	if len(b) != 936 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	t.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	t.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	t.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	t.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	t.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	t.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	t.Eight = [9]time.Time(jay.ReadTimes(b[504:576], 9))
	t.Nine = [9]time.Time(jay.ReadTimes(b[576:648], 9))
	t.Ten = [9]time.Time(jay.ReadTimes(b[648:720], 9))
	t.Eleven = [9]time.Time(jay.ReadTimes(b[720:792], 9))
	t.Twelve = [9]time.Time(jay.ReadTimes(b[792:864], 9))
	t.Thirteen = [9]time.Time(jay.ReadTimes(b[864:], 9))
	return nil
}

func (f *Fourteen) MarshalJ() (b []byte) {
	b = make([]byte, 1008)
	jay.WriteTimes(b[:72], f.One[:])
	jay.WriteTimes(b[72:144], f.Two[:])
	jay.WriteTimes(b[144:216], f.Three[:])
	jay.WriteTimes(b[216:288], f.Four[:])
	jay.WriteTimes(b[288:360], f.Five[:])
	jay.WriteTimes(b[360:432], f.Six[:])
	jay.WriteTimes(b[432:504], f.Seven[:])
	jay.WriteTimes(b[504:576], f.Eight[:])
	jay.WriteTimes(b[576:648], f.Nine[:])
	jay.WriteTimes(b[648:720], f.Ten[:])
	jay.WriteTimes(b[720:792], f.Eleven[:])
	jay.WriteTimes(b[792:864], f.Twelve[:])
	jay.WriteTimes(b[864:936], f.Thirteen[:])
	jay.WriteTimes(b[936:], f.Fourteen[:])
	return
}

func (f *Fourteen) UnmarshalJ(b []byte) error {
	if len(b) != 1008 {
		return jay.ErrUnexpectedEOB
	}
	f.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	f.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	f.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	f.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	f.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	f.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	f.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	f.Eight = [9]time.Time(jay.ReadTimes(b[504:576], 9))
	f.Nine = [9]time.Time(jay.ReadTimes(b[576:648], 9))
	f.Ten = [9]time.Time(jay.ReadTimes(b[648:720], 9))
	f.Eleven = [9]time.Time(jay.ReadTimes(b[720:792], 9))
	f.Twelve = [9]time.Time(jay.ReadTimes(b[792:864], 9))
	f.Thirteen = [9]time.Time(jay.ReadTimes(b[864:936], 9))
	f.Fourteen = [9]time.Time(jay.ReadTimes(b[936:], 9))
	return nil
}

func (f *Fifteen) MarshalJ() (b []byte) {
	b = make([]byte, 1080)
	jay.WriteTimes(b[:72], f.One[:])
	jay.WriteTimes(b[72:144], f.Two[:])
	jay.WriteTimes(b[144:216], f.Three[:])
	jay.WriteTimes(b[216:288], f.Four[:])
	jay.WriteTimes(b[288:360], f.Five[:])
	jay.WriteTimes(b[360:432], f.Six[:])
	jay.WriteTimes(b[432:504], f.Seven[:])
	jay.WriteTimes(b[504:576], f.Eight[:])
	jay.WriteTimes(b[576:648], f.Nine[:])
	jay.WriteTimes(b[648:720], f.Ten[:])
	jay.WriteTimes(b[720:792], f.Eleven[:])
	jay.WriteTimes(b[792:864], f.Twelve[:])
	jay.WriteTimes(b[864:936], f.Thirteen[:])
	jay.WriteTimes(b[936:1008], f.Fourteen[:])
	jay.WriteTimes(b[1008:], f.Fifteen[:])
	return
}

func (f *Fifteen) UnmarshalJ(b []byte) error {
	if len(b) != 1080 {
		return jay.ErrUnexpectedEOB
	}
	f.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	f.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	f.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	f.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	f.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	f.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	f.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	f.Eight = [9]time.Time(jay.ReadTimes(b[504:576], 9))
	f.Nine = [9]time.Time(jay.ReadTimes(b[576:648], 9))
	f.Ten = [9]time.Time(jay.ReadTimes(b[648:720], 9))
	f.Eleven = [9]time.Time(jay.ReadTimes(b[720:792], 9))
	f.Twelve = [9]time.Time(jay.ReadTimes(b[792:864], 9))
	f.Thirteen = [9]time.Time(jay.ReadTimes(b[864:936], 9))
	f.Fourteen = [9]time.Time(jay.ReadTimes(b[936:1008], 9))
	f.Fifteen = [9]time.Time(jay.ReadTimes(b[1008:], 9))
	return nil
}

func (s *Sixteen) MarshalJ() (b []byte) {
	b = make([]byte, 1152)
	jay.WriteTimes(b[:72], s.One[:])
	jay.WriteTimes(b[72:144], s.Two[:])
	jay.WriteTimes(b[144:216], s.Three[:])
	jay.WriteTimes(b[216:288], s.Four[:])
	jay.WriteTimes(b[288:360], s.Five[:])
	jay.WriteTimes(b[360:432], s.Six[:])
	jay.WriteTimes(b[432:504], s.Seven[:])
	jay.WriteTimes(b[504:576], s.Eight[:])
	jay.WriteTimes(b[576:648], s.Nine[:])
	jay.WriteTimes(b[648:720], s.Ten[:])
	jay.WriteTimes(b[720:792], s.Eleven[:])
	jay.WriteTimes(b[792:864], s.Twelve[:])
	jay.WriteTimes(b[864:936], s.Thirteen[:])
	jay.WriteTimes(b[936:1008], s.Fourteen[:])
	jay.WriteTimes(b[1008:1080], s.Fifteen[:])
	jay.WriteTimes(b[1080:], s.Sixteen[:])
	return
}

func (s *Sixteen) UnmarshalJ(b []byte) error {
	if len(b) != 1152 {
		return jay.ErrUnexpectedEOB
	}
	s.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	s.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	s.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	s.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	s.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	s.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	s.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	s.Eight = [9]time.Time(jay.ReadTimes(b[504:576], 9))
	s.Nine = [9]time.Time(jay.ReadTimes(b[576:648], 9))
	s.Ten = [9]time.Time(jay.ReadTimes(b[648:720], 9))
	s.Eleven = [9]time.Time(jay.ReadTimes(b[720:792], 9))
	s.Twelve = [9]time.Time(jay.ReadTimes(b[792:864], 9))
	s.Thirteen = [9]time.Time(jay.ReadTimes(b[864:936], 9))
	s.Fourteen = [9]time.Time(jay.ReadTimes(b[936:1008], 9))
	s.Fifteen = [9]time.Time(jay.ReadTimes(b[1008:1080], 9))
	s.Sixteen = [9]time.Time(jay.ReadTimes(b[1080:], 9))
	return nil
}

func (s *Seventeen) MarshalJ() (b []byte) {
	b = make([]byte, 1224)
	jay.WriteTimes(b[:72], s.One[:])
	jay.WriteTimes(b[72:144], s.Two[:])
	jay.WriteTimes(b[144:216], s.Three[:])
	jay.WriteTimes(b[216:288], s.Four[:])
	jay.WriteTimes(b[288:360], s.Five[:])
	jay.WriteTimes(b[360:432], s.Six[:])
	jay.WriteTimes(b[432:504], s.Seven[:])
	jay.WriteTimes(b[504:576], s.Eight[:])
	jay.WriteTimes(b[576:648], s.Nine[:])
	jay.WriteTimes(b[648:720], s.Ten[:])
	jay.WriteTimes(b[720:792], s.Eleven[:])
	jay.WriteTimes(b[792:864], s.Twelve[:])
	jay.WriteTimes(b[864:936], s.Thirteen[:])
	jay.WriteTimes(b[936:1008], s.Fourteen[:])
	jay.WriteTimes(b[1008:1080], s.Fifteen[:])
	jay.WriteTimes(b[1080:1152], s.Sixteen[:])
	jay.WriteTimes(b[1152:], s.Seventeen[:])
	return
}

func (s *Seventeen) UnmarshalJ(b []byte) error {
	if len(b) != 1224 {
		return jay.ErrUnexpectedEOB
	}
	s.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	s.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	s.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	s.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	s.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	s.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	s.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	s.Eight = [9]time.Time(jay.ReadTimes(b[504:576], 9))
	s.Nine = [9]time.Time(jay.ReadTimes(b[576:648], 9))
	s.Ten = [9]time.Time(jay.ReadTimes(b[648:720], 9))
	s.Eleven = [9]time.Time(jay.ReadTimes(b[720:792], 9))
	s.Twelve = [9]time.Time(jay.ReadTimes(b[792:864], 9))
	s.Thirteen = [9]time.Time(jay.ReadTimes(b[864:936], 9))
	s.Fourteen = [9]time.Time(jay.ReadTimes(b[936:1008], 9))
	s.Fifteen = [9]time.Time(jay.ReadTimes(b[1008:1080], 9))
	s.Sixteen = [9]time.Time(jay.ReadTimes(b[1080:1152], 9))
	s.Seventeen = [9]time.Time(jay.ReadTimes(b[1152:], 9))
	return nil
}

func (e *Eighteen) MarshalJ() (b []byte) {
	b = make([]byte, 1296)
	jay.WriteTimes(b[:72], e.One[:])
	jay.WriteTimes(b[72:144], e.Two[:])
	jay.WriteTimes(b[144:216], e.Three[:])
	jay.WriteTimes(b[216:288], e.Four[:])
	jay.WriteTimes(b[288:360], e.Five[:])
	jay.WriteTimes(b[360:432], e.Six[:])
	jay.WriteTimes(b[432:504], e.Seven[:])
	jay.WriteTimes(b[504:576], e.Eight[:])
	jay.WriteTimes(b[576:648], e.Nine[:])
	jay.WriteTimes(b[648:720], e.Ten[:])
	jay.WriteTimes(b[720:792], e.Eleven[:])
	jay.WriteTimes(b[792:864], e.Twelve[:])
	jay.WriteTimes(b[864:936], e.Thirteen[:])
	jay.WriteTimes(b[936:1008], e.Fourteen[:])
	jay.WriteTimes(b[1008:1080], e.Fifteen[:])
	jay.WriteTimes(b[1080:1152], e.Sixteen[:])
	jay.WriteTimes(b[1152:1224], e.Seventeen[:])
	jay.WriteTimes(b[1224:], e.Eighteen[:])
	return
}

func (e *Eighteen) UnmarshalJ(b []byte) error {
	if len(b) != 1296 {
		return jay.ErrUnexpectedEOB
	}
	e.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	e.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	e.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	e.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	e.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	e.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	e.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	e.Eight = [9]time.Time(jay.ReadTimes(b[504:576], 9))
	e.Nine = [9]time.Time(jay.ReadTimes(b[576:648], 9))
	e.Ten = [9]time.Time(jay.ReadTimes(b[648:720], 9))
	e.Eleven = [9]time.Time(jay.ReadTimes(b[720:792], 9))
	e.Twelve = [9]time.Time(jay.ReadTimes(b[792:864], 9))
	e.Thirteen = [9]time.Time(jay.ReadTimes(b[864:936], 9))
	e.Fourteen = [9]time.Time(jay.ReadTimes(b[936:1008], 9))
	e.Fifteen = [9]time.Time(jay.ReadTimes(b[1008:1080], 9))
	e.Sixteen = [9]time.Time(jay.ReadTimes(b[1080:1152], 9))
	e.Seventeen = [9]time.Time(jay.ReadTimes(b[1152:1224], 9))
	e.Eighteen = [9]time.Time(jay.ReadTimes(b[1224:], 9))
	return nil
}

func (n *Nineteen) MarshalJ() (b []byte) {
	b = make([]byte, 1368)
	jay.WriteTimes(b[:72], n.One[:])
	jay.WriteTimes(b[72:144], n.Two[:])
	jay.WriteTimes(b[144:216], n.Three[:])
	jay.WriteTimes(b[216:288], n.Four[:])
	jay.WriteTimes(b[288:360], n.Five[:])
	jay.WriteTimes(b[360:432], n.Six[:])
	jay.WriteTimes(b[432:504], n.Seven[:])
	jay.WriteTimes(b[504:576], n.Eight[:])
	jay.WriteTimes(b[576:648], n.Nine[:])
	jay.WriteTimes(b[648:720], n.Ten[:])
	jay.WriteTimes(b[720:792], n.Eleven[:])
	jay.WriteTimes(b[792:864], n.Twelve[:])
	jay.WriteTimes(b[864:936], n.Thirteen[:])
	jay.WriteTimes(b[936:1008], n.Fourteen[:])
	jay.WriteTimes(b[1008:1080], n.Fifteen[:])
	jay.WriteTimes(b[1080:1152], n.Sixteen[:])
	jay.WriteTimes(b[1152:1224], n.Seventeen[:])
	jay.WriteTimes(b[1224:1296], n.Eighteen[:])
	jay.WriteTimes(b[1296:], n.Nineteen[:])
	return
}

func (n *Nineteen) UnmarshalJ(b []byte) error {
	if len(b) != 1368 {
		return jay.ErrUnexpectedEOB
	}
	n.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	n.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	n.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	n.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	n.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	n.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	n.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	n.Eight = [9]time.Time(jay.ReadTimes(b[504:576], 9))
	n.Nine = [9]time.Time(jay.ReadTimes(b[576:648], 9))
	n.Ten = [9]time.Time(jay.ReadTimes(b[648:720], 9))
	n.Eleven = [9]time.Time(jay.ReadTimes(b[720:792], 9))
	n.Twelve = [9]time.Time(jay.ReadTimes(b[792:864], 9))
	n.Thirteen = [9]time.Time(jay.ReadTimes(b[864:936], 9))
	n.Fourteen = [9]time.Time(jay.ReadTimes(b[936:1008], 9))
	n.Fifteen = [9]time.Time(jay.ReadTimes(b[1008:1080], 9))
	n.Sixteen = [9]time.Time(jay.ReadTimes(b[1080:1152], 9))
	n.Seventeen = [9]time.Time(jay.ReadTimes(b[1152:1224], 9))
	n.Eighteen = [9]time.Time(jay.ReadTimes(b[1224:1296], 9))
	n.Nineteen = [9]time.Time(jay.ReadTimes(b[1296:], 9))
	return nil
}

func (t *Twenty) MarshalJ() (b []byte) {
	b = make([]byte, 1440)
	jay.WriteTimes(b[:72], t.One[:])
	jay.WriteTimes(b[72:144], t.Two[:])
	jay.WriteTimes(b[144:216], t.Three[:])
	jay.WriteTimes(b[216:288], t.Four[:])
	jay.WriteTimes(b[288:360], t.Five[:])
	jay.WriteTimes(b[360:432], t.Six[:])
	jay.WriteTimes(b[432:504], t.Seven[:])
	jay.WriteTimes(b[504:576], t.Eight[:])
	jay.WriteTimes(b[576:648], t.Nine[:])
	jay.WriteTimes(b[648:720], t.Ten[:])
	jay.WriteTimes(b[720:792], t.Eleven[:])
	jay.WriteTimes(b[792:864], t.Twelve[:])
	jay.WriteTimes(b[864:936], t.Thirteen[:])
	jay.WriteTimes(b[936:1008], t.Fourteen[:])
	jay.WriteTimes(b[1008:1080], t.Fifteen[:])
	jay.WriteTimes(b[1080:1152], t.Sixteen[:])
	jay.WriteTimes(b[1152:1224], t.Seventeen[:])
	jay.WriteTimes(b[1224:1296], t.Eighteen[:])
	jay.WriteTimes(b[1296:1368], t.Nineteen[:])
	jay.WriteTimes(b[1368:], t.Twenty[:])
	return
}

func (t *Twenty) UnmarshalJ(b []byte) error {
	if len(b) != 1440 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	t.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	t.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	t.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	t.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	t.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	t.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	t.Eight = [9]time.Time(jay.ReadTimes(b[504:576], 9))
	t.Nine = [9]time.Time(jay.ReadTimes(b[576:648], 9))
	t.Ten = [9]time.Time(jay.ReadTimes(b[648:720], 9))
	t.Eleven = [9]time.Time(jay.ReadTimes(b[720:792], 9))
	t.Twelve = [9]time.Time(jay.ReadTimes(b[792:864], 9))
	t.Thirteen = [9]time.Time(jay.ReadTimes(b[864:936], 9))
	t.Fourteen = [9]time.Time(jay.ReadTimes(b[936:1008], 9))
	t.Fifteen = [9]time.Time(jay.ReadTimes(b[1008:1080], 9))
	t.Sixteen = [9]time.Time(jay.ReadTimes(b[1080:1152], 9))
	t.Seventeen = [9]time.Time(jay.ReadTimes(b[1152:1224], 9))
	t.Eighteen = [9]time.Time(jay.ReadTimes(b[1224:1296], 9))
	t.Nineteen = [9]time.Time(jay.ReadTimes(b[1296:1368], 9))
	t.Twenty = [9]time.Time(jay.ReadTimes(b[1368:], 9))
	return nil
}

func (t *TwentyOne) MarshalJ() (b []byte) {
	b = make([]byte, 1512)
	jay.WriteTimes(b[:72], t.One[:])
	jay.WriteTimes(b[72:144], t.Two[:])
	jay.WriteTimes(b[144:216], t.Three[:])
	jay.WriteTimes(b[216:288], t.Four[:])
	jay.WriteTimes(b[288:360], t.Five[:])
	jay.WriteTimes(b[360:432], t.Six[:])
	jay.WriteTimes(b[432:504], t.Seven[:])
	jay.WriteTimes(b[504:576], t.Eight[:])
	jay.WriteTimes(b[576:648], t.Nine[:])
	jay.WriteTimes(b[648:720], t.Ten[:])
	jay.WriteTimes(b[720:792], t.Eleven[:])
	jay.WriteTimes(b[792:864], t.Twelve[:])
	jay.WriteTimes(b[864:936], t.Thirteen[:])
	jay.WriteTimes(b[936:1008], t.Fourteen[:])
	jay.WriteTimes(b[1008:1080], t.Fifteen[:])
	jay.WriteTimes(b[1080:1152], t.Sixteen[:])
	jay.WriteTimes(b[1152:1224], t.Seventeen[:])
	jay.WriteTimes(b[1224:1296], t.Eighteen[:])
	jay.WriteTimes(b[1296:1368], t.Nineteen[:])
	jay.WriteTimes(b[1368:1440], t.Twenty[:])
	jay.WriteTimes(b[1440:], t.TwentyOne[:])
	return
}

func (t *TwentyOne) UnmarshalJ(b []byte) error {
	if len(b) != 1512 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	t.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	t.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	t.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	t.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	t.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	t.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	t.Eight = [9]time.Time(jay.ReadTimes(b[504:576], 9))
	t.Nine = [9]time.Time(jay.ReadTimes(b[576:648], 9))
	t.Ten = [9]time.Time(jay.ReadTimes(b[648:720], 9))
	t.Eleven = [9]time.Time(jay.ReadTimes(b[720:792], 9))
	t.Twelve = [9]time.Time(jay.ReadTimes(b[792:864], 9))
	t.Thirteen = [9]time.Time(jay.ReadTimes(b[864:936], 9))
	t.Fourteen = [9]time.Time(jay.ReadTimes(b[936:1008], 9))
	t.Fifteen = [9]time.Time(jay.ReadTimes(b[1008:1080], 9))
	t.Sixteen = [9]time.Time(jay.ReadTimes(b[1080:1152], 9))
	t.Seventeen = [9]time.Time(jay.ReadTimes(b[1152:1224], 9))
	t.Eighteen = [9]time.Time(jay.ReadTimes(b[1224:1296], 9))
	t.Nineteen = [9]time.Time(jay.ReadTimes(b[1296:1368], 9))
	t.Twenty = [9]time.Time(jay.ReadTimes(b[1368:1440], 9))
	t.TwentyOne = [9]time.Time(jay.ReadTimes(b[1440:], 9))
	return nil
}

func (t *TwentyTwo) MarshalJ() (b []byte) {
	b = make([]byte, 1584)
	jay.WriteTimes(b[:72], t.One[:])
	jay.WriteTimes(b[72:144], t.Two[:])
	jay.WriteTimes(b[144:216], t.Three[:])
	jay.WriteTimes(b[216:288], t.Four[:])
	jay.WriteTimes(b[288:360], t.Five[:])
	jay.WriteTimes(b[360:432], t.Six[:])
	jay.WriteTimes(b[432:504], t.Seven[:])
	jay.WriteTimes(b[504:576], t.Eight[:])
	jay.WriteTimes(b[576:648], t.Nine[:])
	jay.WriteTimes(b[648:720], t.Ten[:])
	jay.WriteTimes(b[720:792], t.Eleven[:])
	jay.WriteTimes(b[792:864], t.Twelve[:])
	jay.WriteTimes(b[864:936], t.Thirteen[:])
	jay.WriteTimes(b[936:1008], t.Fourteen[:])
	jay.WriteTimes(b[1008:1080], t.Fifteen[:])
	jay.WriteTimes(b[1080:1152], t.Sixteen[:])
	jay.WriteTimes(b[1152:1224], t.Seventeen[:])
	jay.WriteTimes(b[1224:1296], t.Eighteen[:])
	jay.WriteTimes(b[1296:1368], t.Nineteen[:])
	jay.WriteTimes(b[1368:1440], t.Twenty[:])
	jay.WriteTimes(b[1440:1512], t.TwentyOne[:])
	jay.WriteTimes(b[1512:], t.TwentyTwo[:])
	return
}

func (t *TwentyTwo) UnmarshalJ(b []byte) error {
	if len(b) != 1584 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	t.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	t.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	t.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	t.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	t.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	t.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	t.Eight = [9]time.Time(jay.ReadTimes(b[504:576], 9))
	t.Nine = [9]time.Time(jay.ReadTimes(b[576:648], 9))
	t.Ten = [9]time.Time(jay.ReadTimes(b[648:720], 9))
	t.Eleven = [9]time.Time(jay.ReadTimes(b[720:792], 9))
	t.Twelve = [9]time.Time(jay.ReadTimes(b[792:864], 9))
	t.Thirteen = [9]time.Time(jay.ReadTimes(b[864:936], 9))
	t.Fourteen = [9]time.Time(jay.ReadTimes(b[936:1008], 9))
	t.Fifteen = [9]time.Time(jay.ReadTimes(b[1008:1080], 9))
	t.Sixteen = [9]time.Time(jay.ReadTimes(b[1080:1152], 9))
	t.Seventeen = [9]time.Time(jay.ReadTimes(b[1152:1224], 9))
	t.Eighteen = [9]time.Time(jay.ReadTimes(b[1224:1296], 9))
	t.Nineteen = [9]time.Time(jay.ReadTimes(b[1296:1368], 9))
	t.Twenty = [9]time.Time(jay.ReadTimes(b[1368:1440], 9))
	t.TwentyOne = [9]time.Time(jay.ReadTimes(b[1440:1512], 9))
	t.TwentyTwo = [9]time.Time(jay.ReadTimes(b[1512:], 9))
	return nil
}

func (t *TwentyThree) MarshalJ() (b []byte) {
	b = make([]byte, 1656)
	jay.WriteTimes(b[:72], t.One[:])
	jay.WriteTimes(b[72:144], t.Two[:])
	jay.WriteTimes(b[144:216], t.Three[:])
	jay.WriteTimes(b[216:288], t.Four[:])
	jay.WriteTimes(b[288:360], t.Five[:])
	jay.WriteTimes(b[360:432], t.Six[:])
	jay.WriteTimes(b[432:504], t.Seven[:])
	jay.WriteTimes(b[504:576], t.Eight[:])
	jay.WriteTimes(b[576:648], t.Nine[:])
	jay.WriteTimes(b[648:720], t.Ten[:])
	jay.WriteTimes(b[720:792], t.Eleven[:])
	jay.WriteTimes(b[792:864], t.Twelve[:])
	jay.WriteTimes(b[864:936], t.Thirteen[:])
	jay.WriteTimes(b[936:1008], t.Fourteen[:])
	jay.WriteTimes(b[1008:1080], t.Fifteen[:])
	jay.WriteTimes(b[1080:1152], t.Sixteen[:])
	jay.WriteTimes(b[1152:1224], t.Seventeen[:])
	jay.WriteTimes(b[1224:1296], t.Eighteen[:])
	jay.WriteTimes(b[1296:1368], t.Nineteen[:])
	jay.WriteTimes(b[1368:1440], t.Twenty[:])
	jay.WriteTimes(b[1440:1512], t.TwentyOne[:])
	jay.WriteTimes(b[1512:1584], t.TwentyTwo[:])
	jay.WriteTimes(b[1584:], t.TwentyThree[:])
	return
}

func (t *TwentyThree) UnmarshalJ(b []byte) error {
	if len(b) != 1656 {
		return jay.ErrUnexpectedEOB
	}
	t.One = [9]time.Time(jay.ReadTimes(b[:72], 9))
	t.Two = [9]time.Time(jay.ReadTimes(b[72:144], 9))
	t.Three = [9]time.Time(jay.ReadTimes(b[144:216], 9))
	t.Four = [9]time.Time(jay.ReadTimes(b[216:288], 9))
	t.Five = [9]time.Time(jay.ReadTimes(b[288:360], 9))
	t.Six = [9]time.Time(jay.ReadTimes(b[360:432], 9))
	t.Seven = [9]time.Time(jay.ReadTimes(b[432:504], 9))
	t.Eight = [9]time.Time(jay.ReadTimes(b[504:576], 9))
	t.Nine = [9]time.Time(jay.ReadTimes(b[576:648], 9))
	t.Ten = [9]time.Time(jay.ReadTimes(b[648:720], 9))
	t.Eleven = [9]time.Time(jay.ReadTimes(b[720:792], 9))
	t.Twelve = [9]time.Time(jay.ReadTimes(b[792:864], 9))
	t.Thirteen = [9]time.Time(jay.ReadTimes(b[864:936], 9))
	t.Fourteen = [9]time.Time(jay.ReadTimes(b[936:1008], 9))
	t.Fifteen = [9]time.Time(jay.ReadTimes(b[1008:1080], 9))
	t.Sixteen = [9]time.Time(jay.ReadTimes(b[1080:1152], 9))
	t.Seventeen = [9]time.Time(jay.ReadTimes(b[1152:1224], 9))
	t.Eighteen = [9]time.Time(jay.ReadTimes(b[1224:1296], 9))
	t.Nineteen = [9]time.Time(jay.ReadTimes(b[1296:1368], 9))
	t.Twenty = [9]time.Time(jay.ReadTimes(b[1368:1440], 9))
	t.TwentyOne = [9]time.Time(jay.ReadTimes(b[1440:1512], 9))
	t.TwentyTwo = [9]time.Time(jay.ReadTimes(b[1512:1584], 9))
	t.TwentyThree = [9]time.Time(jay.ReadTimes(b[1584:], 9))
	return nil
}
