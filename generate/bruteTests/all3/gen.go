package main

import (
	"bytes"
	"fmt"
	"os"
)

func main() {
	types := []string{
		"bool", "[]bool",
		"byte", "[]byte",
		"float32", "[]float32",
		"float64", "[]float64",
		"int", "int8", "int16", "int32", "rune", "int64",
		"[]int", "[]int8", "[]int16", "[]int32", "[]int64",
		"uint", "uint8", "uint16", "uint32", "uint64",
		"[]uint", "[]uint16", "[]uint32", "[]uint64",
		"string", "[]string",
		"time.Time", "[]time.Time", "time.Duration", "[]time.Duration",
	}

	buf := bytes.NewBufferString(`// Code generated by gen.go; DO NOT EDIT.

package main

import "time"
`)
	var i uint
	for _, a := range types {
		for _, b := range types {
			for _, c := range types {
				if a == b && a == c {
					// Identical field types are already covered in other test directories.
					continue
				}

				_, _ = fmt.Fprintf(buf, `
type Fuzz%d struct {
	One   %s
	Two   %s
	Three %s
}
`, i, a, b, c)
				i++
			}
		}
	}

	const perm = 0666
	err := os.WriteFile("pkg.go", buf.Bytes(), perm)
	if err != nil {
		panic(err)
	}
}
